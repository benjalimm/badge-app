/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "BaseRelayRecipient",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseRelayRecipient__factory>;
    getContractFactory(
      name: "IRelayRecipient",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRelayRecipient__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "ERC721URIStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721URIStorage__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "BadgePriceCalculator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BadgePriceCalculator__factory>;
    getContractFactory(
      name: "BadgeRecoveryOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BadgeRecoveryOracle__factory>;
    getContractFactory(
      name: "BadgeRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BadgeRegistry__factory>;
    getContractFactory(
      name: "BadgeToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BadgeToken__factory>;
    getContractFactory(
      name: "BadgeTokenFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BadgeTokenFactory__factory>;
    getContractFactory(
      name: "BadgeXP",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BadgeXP__factory>;
    getContractFactory(
      name: "BadgeXPOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BadgeXPOracle__factory>;
    getContractFactory(
      name: "Entity",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Entity__factory>;
    getContractFactory(
      name: "EntityFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EntityFactory__factory>;
    getContractFactory(
      name: "NonTransferableERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NonTransferableERC721__factory>;
    getContractFactory(
      name: "PermissionToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PermissionToken__factory>;
    getContractFactory(
      name: "PermissionTokenFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PermissionTokenFactory__factory>;
    getContractFactory(
      name: "IBadgePriceCalculator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBadgePriceCalculator__factory>;
    getContractFactory(
      name: "IBadgeRecoveryOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBadgeRecoveryOracle__factory>;
    getContractFactory(
      name: "IBadgeRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBadgeRegistry__factory>;
    getContractFactory(
      name: "IBadgeToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBadgeToken__factory>;
    getContractFactory(
      name: "IBadgeTokenFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBadgeTokenFactory__factory>;
    getContractFactory(
      name: "IBadgeXP",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBadgeXP__factory>;
    getContractFactory(
      name: "IBadgeXPOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBadgeXPOracle__factory>;
    getContractFactory(
      name: "IEntity",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEntity__factory>;
    getContractFactory(
      name: "IEntityFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEntityFactory__factory>;
    getContractFactory(
      name: "IPermissionToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPermissionToken__factory>;
    getContractFactory(
      name: "IPermissionTokenFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPermissionTokenFactory__factory>;

    getContractAt(
      name: "BaseRelayRecipient",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseRelayRecipient>;
    getContractAt(
      name: "IRelayRecipient",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IRelayRecipient>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "ERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "ERC721URIStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721URIStorage>;
    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "BadgePriceCalculator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BadgePriceCalculator>;
    getContractAt(
      name: "BadgeRecoveryOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BadgeRecoveryOracle>;
    getContractAt(
      name: "BadgeRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BadgeRegistry>;
    getContractAt(
      name: "BadgeToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BadgeToken>;
    getContractAt(
      name: "BadgeTokenFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BadgeTokenFactory>;
    getContractAt(
      name: "BadgeXP",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BadgeXP>;
    getContractAt(
      name: "BadgeXPOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BadgeXPOracle>;
    getContractAt(
      name: "Entity",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Entity>;
    getContractAt(
      name: "EntityFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EntityFactory>;
    getContractAt(
      name: "NonTransferableERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NonTransferableERC721>;
    getContractAt(
      name: "PermissionToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PermissionToken>;
    getContractAt(
      name: "PermissionTokenFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PermissionTokenFactory>;
    getContractAt(
      name: "IBadgePriceCalculator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBadgePriceCalculator>;
    getContractAt(
      name: "IBadgeRecoveryOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBadgeRecoveryOracle>;
    getContractAt(
      name: "IBadgeRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBadgeRegistry>;
    getContractAt(
      name: "IBadgeToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBadgeToken>;
    getContractAt(
      name: "IBadgeTokenFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBadgeTokenFactory>;
    getContractAt(
      name: "IBadgeXP",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBadgeXP>;
    getContractAt(
      name: "IBadgeXPOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBadgeXPOracle>;
    getContractAt(
      name: "IEntity",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IEntity>;
    getContractAt(
      name: "IEntityFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IEntityFactory>;
    getContractAt(
      name: "IPermissionToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPermissionToken>;
    getContractAt(
      name: "IPermissionTokenFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPermissionTokenFactory>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
