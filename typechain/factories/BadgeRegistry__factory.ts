/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BadgeRegistry, BadgeRegistryInterface } from "../BadgeRegistry";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "entityAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "entityName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "genesisTokenHolder",
        type: "address",
      },
    ],
    name: "EntityRegistered",
    type: "event",
  },
  {
    inputs: [],
    name: "badgeGnosisSafe",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "badgePriceOracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "badgeTokenEntityReverseRecord",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "badgeTokenFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "badgeXPToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseMinimumStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "certifiedRegistries",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deployer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "entities",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "entityFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum BadgeRegistry.EntityReverseRecordType",
        name: "tokenType",
        type: "uint8",
      },
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
    ],
    name: "filterAddressesForEntityReverseRecord",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "level",
        type: "uint256",
      },
    ],
    name: "getBadgePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBadgeTokenFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBadgeXPToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseMinimumStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntityFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPermissionTokenFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRecoveryOracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSafe",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "isRegistered",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
    ],
    name: "isRegistryCertified",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "permTokenEntityReverseRecord",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "permissionTokenFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "recoveryOracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "entityName",
        type: "string",
      },
      {
        internalType: "string",
        name: "genesisTokenURI",
        type: "string",
      },
      {
        internalType: "bool",
        name: "deployTokens",
        type: "bool",
      },
    ],
    name: "registerEntity",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_badgePriceOracle",
        type: "address",
      },
    ],
    name: "setBadgePriceOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_badgeTokenFactory",
        type: "address",
      },
    ],
    name: "setBadgeTokenFactory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_badgeXPToken",
        type: "address",
      },
    ],
    name: "setBadgeXPToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_baseMinimumStake",
        type: "uint256",
      },
    ],
    name: "setBaseMinimumStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_certifiedRegistry",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_certified",
        type: "bool",
      },
    ],
    name: "setCertifiedRegistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_entityFactory",
        type: "address",
      },
    ],
    name: "setEntityFactory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_permissionTokenFactory",
        type: "address",
      },
    ],
    name: "setPermissionTokenFactory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recoveryOracle",
        type: "address",
      },
    ],
    name: "setRecoveryOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "perm",
        type: "address",
      },
      {
        internalType: "address",
        name: "badge",
        type: "address",
      },
    ],
    name: "setTokenReverseRecords",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555066354a6ba7a18000600c5534801561005d57600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600b60003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550612538806101056000396000f3fe6080604052600436106101f95760003560e01c80637d0903781161010d578063bfbaade7116100a0578063d2502a981161006f578063d2502a9814610750578063d5f3948814610779578063d6b66c58146107a4578063eab15067146107cd578063ec700190146107f8576101f9565b8063bfbaade714610682578063c3c5a547146106ab578063cb6e390c146106e8578063cdd8ee7f14610725576101f9565b8063a7856462116100dc578063a7856462146105c8578063adb4bd4f14610605578063b4bf50751461062e578063bb0a69b014610659576101f9565b80637d0903781461052d5780639d1c1b8214610549578063a4714b9a14610574578063a59cf7e11461059d576101f9565b806339c2c47f1161019057806354356f371161015f57806354356f37146104345780635b4146c11461045f5780635f74981f1461049c57806368bc573e146104d9578063745851e214610504576101f9565b806339c2c47f146103765780633a439fa1146103a15780634849a7ed146103cc57806350ed052214610409576101f9565b80632af7ca6d116101cc5780632af7ca6d146102bc5780632e7fdc94146102f95780632e8603151461032257806330f3130e1461034b576101f9565b806309c33619146101fe5780631d8ee48a146102295780631e93e3971461026657806327a462fe14610291575b600080fd5b34801561020a57600080fd5b50610213610823565b60405161022091906120ea565b60405180910390f35b34801561023557600080fd5b50610250600480360381019061024b9190611d21565b610849565b60405161025d9190612167565b60405180910390f35b34801561027257600080fd5b5061027b610869565b60405161028891906120ea565b60405180910390f35b34801561029d57600080fd5b506102a6610893565b6040516102b391906120ea565b60405180910390f35b3480156102c857600080fd5b506102e360048036038101906102de9190611d21565b6108bd565b6040516102f091906120ea565b60405180910390f35b34801561030557600080fd5b50610320600480360381019061031b9190611d21565b6108f0565b005b34801561032e57600080fd5b5061034960048036038101906103449190611d21565b6109c2565b005b34801561035757600080fd5b50610360610a94565b60405161036d9190612267565b60405180910390f35b34801561038257600080fd5b5061038b610a9e565b6040516103989190612267565b60405180910390f35b3480156103ad57600080fd5b506103b6610aa4565b6040516103c391906120ea565b60405180910390f35b3480156103d857600080fd5b506103f360048036038101906103ee9190611d21565b610aca565b6040516104009190612167565b60405180910390f35b34801561041557600080fd5b5061041e610aea565b60405161042b91906120ea565b60405180910390f35b34801561044057600080fd5b50610449610b10565b60405161045691906120ea565b60405180910390f35b34801561046b57600080fd5b5061048660048036038101906104819190611d21565b610b36565b60405161049391906120ea565b60405180910390f35b3480156104a857600080fd5b506104c360048036038101906104be9190611e14565b610b69565b6040516104d09190612145565b60405180910390f35b3480156104e557600080fd5b506104ee610e12565b6040516104fb91906120ea565b60405180910390f35b34801561051057600080fd5b5061052b60048036038101906105269190611d21565b610e3c565b005b61054760048036038101906105429190611e6c565b610f0e565b005b34801561055557600080fd5b5061055e6113fc565b60405161056b91906120ea565b60405180910390f35b34801561058057600080fd5b5061059b60048036038101906105969190611d21565b611422565b005b3480156105a957600080fd5b506105b26114f4565b6040516105bf91906120ea565b60405180910390f35b3480156105d457600080fd5b506105ef60048036038101906105ea9190611d21565b61151e565b6040516105fc9190612167565b60405180910390f35b34801561061157600080fd5b5061062c60048036038101906106279190611d73565b611574565b005b34801561063a57600080fd5b50610643611707565b60405161065091906120ea565b60405180910390f35b34801561066557600080fd5b50610680600480360381019061067b9190611daf565b611731565b005b34801561068e57600080fd5b506106a960048036038101906106a49190611ef5565b61181a565b005b3480156106b757600080fd5b506106d260048036038101906106cd9190611d21565b6118b2565b6040516106df9190612167565b60405180910390f35b3480156106f457600080fd5b5061070f600480360381019061070a9190611ef5565b611908565b60405161071c9190612267565b60405180910390f35b34801561073157600080fd5b5061073a6119bc565b60405161074791906120ea565b60405180910390f35b34801561075c57600080fd5b5061077760048036038101906107729190611d21565b6119e2565b005b34801561078557600080fd5b5061078e611ab4565b60405161079b91906120ea565b60405180910390f35b3480156107b057600080fd5b506107cb60048036038101906107c69190611d21565b611ad8565b005b3480156107d957600080fd5b506107e2611baa565b6040516107ef91906120ea565b60405180910390f35b34801561080457600080fd5b5061080d611bd4565b60405161081a91906120ea565b60405180910390f35b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60086020528060005260406000206000915054906101000a900460ff1681565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600a6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461097e576040517f973d02cb00000000000000000000000000000000000000000000000000000000815260040161097590612227565b60405180910390fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a50576040517f973d02cb000000000000000000000000000000000000000000000000000000008152600401610a4790612227565b60405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600c54905090565b600c5481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600b6020528060005260406000206000915054906101000a900460ff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60096020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606000806001811115610ba6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b856001811115610bdf577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610beb57600a610bee565b60095b905060008484905067ffffffffffffffff811115610c35577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610c635781602001602082028036833780820191505090505b50905060005b85859050811015610e05576000868683818110610caf577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050602002016020810190610cc49190611d21565b905060008460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600860008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610df05781848481518110610db5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b50508080610dfd90612340565b915050610c69565b8193505050509392505050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610eca576040517f973d02cb000000000000000000000000000000000000000000000000000000008152600401610ec190612227565b60405180910390fd5b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639a6aff8b8787600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16338989896040518863ffffffff1660e01b8152600401610f999796959493929190612182565b602060405180830381600087803b158015610fb357600080fd5b505af1158015610fc7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610feb9190611deb565b905060008190506001600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555082156113b657600c54341015611095576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108c906121e7565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff16635be0eefb6040518163ffffffff1660e01b815260040160206040518083038186803b1580156110dd57600080fd5b505afa1580156110f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111159190611d4a565b73ffffffffffffffffffffffffffffffffffffffff1634604051611138906120d5565b60006040518083038185875af1925050503d8060008114611175576040519150601f19603f3d011682016040523d82523d6000602084013e61117a565b606091505b50509050806111be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111b590612207565b60405180910390fd5b81600960008573ffffffffffffffffffffffffffffffffffffffff16635be0eefb6040518163ffffffff1660e01b815260040160206040518083038186803b15801561120957600080fd5b505afa15801561121d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112419190611d4a565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600a60008573ffffffffffffffffffffffffffffffffffffffff1663dd75b3f66040518163ffffffff1660e01b815260040160206040518083038186803b15801561130457600080fd5b505afa158015611318573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061133c9190611d4a565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b7f4a8632d3207d7cb50cfb7d972f4e76473b113c1801fab878aed2ee496ab0f5af818888336040516113eb9493929190612105565b60405180910390a150505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146114b0576040517f973d02cb0000000000000000000000000000000000000000000000000000000081526004016114a790612227565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60011515600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514611607576040517f973d02cb0000000000000000000000000000000000000000000000000000000081526004016115fe90612247565b60405180910390fd5b33600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146117bf576040517f973d02cb0000000000000000000000000000000000000000000000000000000081526004016117b690612227565b60405180910390fd5b80600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146118a8576040517f973d02cb00000000000000000000000000000000000000000000000000000000815260040161189f90612227565b60405180910390fd5b80600c8190555050565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e85b6125836040518263ffffffff1660e01b81526004016119659190612267565b60206040518083038186803b15801561197d57600080fd5b505afa158015611991573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119b59190611f1e565b9050919050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611a70576040517f973d02cb000000000000000000000000000000000000000000000000000000008152600401611a6790612227565b60405180910390fd5b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611b66576040517f973d02cb000000000000000000000000000000000000000000000000000000008152600401611b5d90612227565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081359050611c0981612496565b92915050565b600081519050611c1e81612496565b92915050565b60008083601f840112611c3657600080fd5b8235905067ffffffffffffffff811115611c4f57600080fd5b602083019150836020820283011115611c6757600080fd5b9250929050565b600081359050611c7d816124ad565b92915050565b600081519050611c92816124c4565b92915050565b600081359050611ca7816124db565b92915050565b60008083601f840112611cbf57600080fd5b8235905067ffffffffffffffff811115611cd857600080fd5b602083019150836001820283011115611cf057600080fd5b9250929050565b600081359050611d06816124eb565b92915050565b600081519050611d1b816124eb565b92915050565b600060208284031215611d3357600080fd5b6000611d4184828501611bfa565b91505092915050565b600060208284031215611d5c57600080fd5b6000611d6a84828501611c0f565b91505092915050565b60008060408385031215611d8657600080fd5b6000611d9485828601611bfa565b9250506020611da585828601611bfa565b9150509250929050565b60008060408385031215611dc257600080fd5b6000611dd085828601611bfa565b9250506020611de185828601611c6e565b9150509250929050565b600060208284031215611dfd57600080fd5b6000611e0b84828501611c83565b91505092915050565b600080600060408486031215611e2957600080fd5b6000611e3786828701611c98565b935050602084013567ffffffffffffffff811115611e5457600080fd5b611e6086828701611c24565b92509250509250925092565b600080600080600060608688031215611e8457600080fd5b600086013567ffffffffffffffff811115611e9e57600080fd5b611eaa88828901611cad565b9550955050602086013567ffffffffffffffff811115611ec957600080fd5b611ed588828901611cad565b93509350506040611ee888828901611c6e565b9150509295509295909350565b600060208284031215611f0757600080fd5b6000611f1584828501611cf7565b91505092915050565b600060208284031215611f3057600080fd5b6000611f3e84828501611d0c565b91505092915050565b6000611f538383611f5f565b60208301905092915050565b611f68816122d7565b82525050565b611f77816122d7565b82525050565b6000611f8882612292565b611f9281856122aa565b9350611f9d83612282565b8060005b83811015611fce578151611fb58882611f47565b9750611fc08361229d565b925050600181019050611fa1565b5085935050505092915050565b611fe4816122e9565b82525050565b6000611ff683856122c6565b9350612003838584612331565b61200c836123b8565b840190509392505050565b60006120246010836122c6565b915061202f826123c9565b602082019050919050565b60006120476021836122c6565b9150612052826123f2565b604082019050919050565b600061206a601b836122c6565b915061207582612441565b602082019050919050565b600061208d6015836122c6565b91506120988261246a565b602082019050919050565b60006120b06000836122bb565b91506120bb82612493565b600082019050919050565b6120cf81612327565b82525050565b60006120e0826120a3565b9150819050919050565b60006020820190506120ff6000830184611f6e565b92915050565b600060608201905061211a6000830187611f6e565b818103602083015261212d818587611fea565b905061213c6040830184611f6e565b95945050505050565b6000602082019050818103600083015261215f8184611f7d565b905092915050565b600060208201905061217c6000830184611fdb565b92915050565b600060a082019050818103600083015261219d81898b611fea565b90506121ac6020830188611f6e565b6121b96040830187611f6e565b81810360608301526121cc818587611fea565b90506121db6080830184611fdb565b98975050505050505050565b6000602082019050818103600083015261220081612017565b9050919050565b600060208201905081810360008301526122208161203a565b9050919050565b600060208201905081810360008301526122408161205d565b9050919050565b6000602082019050818103600083015261226081612080565b9050919050565b600060208201905061227c60008301846120c6565b92915050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b60006122e282612307565b9050919050565b60008115159050919050565b6000612300826122d7565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b600061234b82612327565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561237e5761237d612389565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f8301169050919050565b7f4e6f7420656e6f756768207374616b6500000000000000000000000000000000600082015250565b7f4661696c656420746f2073656e642065746820746f20626164676520746f6b6560008201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b7f4f6e6c79206465706c6f7965722063616e2063616c6c20746869730000000000600082015250565b7f456e74697479206e6f7420726567697374657265640000000000000000000000600082015250565b50565b61249f816122d7565b81146124aa57600080fd5b50565b6124b6816122e9565b81146124c157600080fd5b50565b6124cd816122f5565b81146124d857600080fd5b50565b600281106124e857600080fd5b50565b6124f481612327565b81146124ff57600080fd5b5056fea264697066735822122085f7a68248a49bd83d55619e4ef160defef98ba374e6e140fc0f0eb44fad369364736f6c63430008040033";

export class BadgeRegistry__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BadgeRegistry> {
    return super.deploy(overrides || {}) as Promise<BadgeRegistry>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BadgeRegistry {
    return super.attach(address) as BadgeRegistry;
  }
  connect(signer: Signer): BadgeRegistry__factory {
    return super.connect(signer) as BadgeRegistry__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BadgeRegistryInterface {
    return new utils.Interface(_abi) as BadgeRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BadgeRegistry {
    return new Contract(address, _abi, signerOrProvider) as BadgeRegistry;
  }
}
