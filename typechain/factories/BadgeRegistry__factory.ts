/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BadgeRegistry, BadgeRegistryInterface } from "../BadgeRegistry";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "badgePriceCalculator",
        type: "address",
      },
    ],
    name: "BadgePriceCalculatorSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "badgeTokenFactory",
        type: "address",
      },
    ],
    name: "BadgeTokenFactorySet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "badgeXPToken",
        type: "address",
      },
    ],
    name: "BadgeXPTokenSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "entityFactory",
        type: "address",
      },
    ],
    name: "EntityFactorySet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "entityAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "entityName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "genesisTokenHolder",
        type: "address",
      },
    ],
    name: "EntityRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "permissionTokenFactory",
        type: "address",
      },
    ],
    name: "PermissionTokenFactorySet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "recoveryOracle",
        type: "address",
      },
    ],
    name: "RecoveryOracleSet",
    type: "event",
  },
  {
    inputs: [],
    name: "badgeGnosisSafe",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "badgePriceCalculator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "badgeTokenEntityReverseRecord",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "badgeTokenFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "badgeXPToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "entities",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "entityFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IBadgeRegistry.EntityReverseRecordType",
        name: "tokenType",
        type: "uint8",
      },
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
    ],
    name: "filterAddressesForEntityReverseRecord",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "level",
        type: "uint256",
      },
    ],
    name: "getBadgePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBadgeTokenFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBadgeXPToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntityFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLevelMultiplierX1000",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPermissionTokenFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRecoveryOracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSafe",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "isRegistered",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "levelMultiplierX1000",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "permTokenEntityReverseRecord",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "permissionContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "permissionTokenFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "recoveryOracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "entityName",
        type: "string",
      },
      {
        internalType: "string",
        name: "genesisTokenURI",
        type: "string",
      },
    ],
    name: "registerEntity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_badgePriceCalculator",
        type: "address",
      },
    ],
    name: "setBadgePriceCalculator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_badgeTokenFactory",
        type: "address",
      },
    ],
    name: "setBadgeTokenFactory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_badgeXPToken",
        type: "address",
      },
    ],
    name: "setBadgeXPToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_entityFactory",
        type: "address",
      },
    ],
    name: "setEntityFactory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_permissionTokenFactory",
        type: "address",
      },
    ],
    name: "setPermissionTokenFactory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recoveryOracle",
        type: "address",
      },
    ],
    name: "setRecoveryOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526109c46001556000600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561005857600080fd5b5033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611d74806100a96000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c8063a1311ae711610104578063cdd8ee7f116100a2578063df19420811610071578063df19420814610549578063eab1506714610567578063ec70019014610585578063eeccbda8146105a3576101da565b8063cdd8ee7f146104d5578063d2502a98146104f3578063d53cb7181461050f578063d6b66c581461052d576101da565b8063b4bf5075116100de578063b4bf507514610439578063bd8cdfd514610457578063c3c5a54714610475578063cb6e390c146104a5576101da565b8063a1311ae7146103e3578063a4714b9a146103ff578063a59cf7e11461041b576101da565b80632ff197801161017c5780635f74981f1161014b5780635f74981f1461035957806368bc573e146103895780638da5cb5b146103a75780639d1c1b82146103c5576101da565b80632ff19780146102d15780633a439fa1146102ed57806350ed05221461030b5780635b4146c114610329576101da565b806327a462fe116101b857806327a462fe1461024b5780632af7ca6d146102695780632e7fdc94146102995780632e860315146102b5576101da565b806309c33619146101df5780631d8ee48a146101fd5780631e93e3971461022d575b600080fd5b6101e76105c1565b6040516101f49190611a5a565b60405180910390f35b610217600480360381019061021291906117be565b6105e7565b6040516102249190611ad7565b60405180910390f35b610235610607565b6040516102429190611a5a565b60405180910390f35b610253610631565b6040516102609190611a5a565b60405180910390f35b610283600480360381019061027e91906117be565b61065b565b6040516102909190611a5a565b60405180910390f35b6102b360048036038101906102ae91906117be565b61068e565b005b6102cf60048036038101906102ca91906117be565b610799565b005b6102eb60048036038101906102e69190611891565b6108a4565b005b6102f5610c19565b6040516103029190611a5a565b60405180910390f35b610313610c3f565b6040516103209190611a5a565b60405180910390f35b610343600480360381019061033e91906117be565b610c65565b6040516103509190611a5a565b60405180910390f35b610373600480360381019061036e9190611839565b610c98565b6040516103809190611ab5565b60405180910390f35b610391610f41565b60405161039e9190611a5a565b60405180910390f35b6103af610f6b565b6040516103bc9190611a5a565b60405180910390f35b6103cd610f91565b6040516103da9190611a5a565b60405180910390f35b6103fd60048036038101906103f891906117be565b610fb7565b005b610419600480360381019061041491906117be565b6110e4565b005b6104236111ef565b6040516104309190611a5a565b60405180910390f35b610441611219565b60405161044e9190611a5a565b60405180910390f35b61045f611243565b60405161046c9190611b69565b60405180910390f35b61048f600480360381019061048a91906117be565b611249565b60405161049c9190611ad7565b60405180910390f35b6104bf60048036038101906104ba9190611906565b61129f565b6040516104cc9190611b69565b60405180910390f35b6104dd611353565b6040516104ea9190611a5a565b60405180910390f35b61050d600480360381019061050891906117be565b611379565b005b6105176114fd565b6040516105249190611a5a565b60405180910390f35b610547600480360381019061054291906117be565b611521565b005b61055161162c565b60405161055e9190611b69565b60405180910390f35b61056f611636565b60405161057c9190611a5a565b60405180910390f35b61058d611660565b60405161059a9190611a5a565b60405180910390f35b6105ab611686565b6040516105b89190611a5a565b60405180910390f35b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a6020528060005260406000206000915054906101000a900460ff1681565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600c6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461071e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071590611b49565b60405180910390fd5b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fd75b0d57b8863424158f54997697446e271b782771a480bb68d5c07e4e621b0a8160405161078e9190611a5a565b60405180910390a150565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610829576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082090611b49565b60405180910390fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f427cc3b09f2f87091b4a69494cf8a431c71358f02fd5e92d3e4cf2a2600a7e36816040516108999190611a5a565b60405180910390a150565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636371b8b48686600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163388886040518763ffffffff1660e01b815260040161092d96959493929190611af2565b602060405180830381600087803b15801561094757600080fd5b505af115801561095b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097f9190611810565b905060008190506001600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16635be0eefb6040518163ffffffff1660e01b815260040160206040518083038186803b158015610a2457600080fd5b505afa158015610a38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5c91906117e7565b600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff1663dd75b3f66040518163ffffffff1660e01b815260040160206040518083038186803b158015610b1f57600080fd5b505afa158015610b33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5791906117e7565b600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f4a8632d3207d7cb50cfb7d972f4e76473b113c1801fab878aed2ee496ab0f5af81878733604051610c099493929190611a75565b60405180910390a1505050505050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600b6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606000806001811115610cd5577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b856001811115610d0e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610d1a57600c610d1d565b600b5b905060008484905067ffffffffffffffff811115610d64577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610d925781602001602082028036833780820191505090505b50905060005b85859050811015610f34576000868683818110610dde577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050602002016020810190610df391906117be565b905060008460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600a60008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610f1f5781848481518110610ee4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b50508080610f2c90611c37565b915050610d98565b8193505050509392505050565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611047576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161103e90611b49565b60405180910390fd5b80600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f6fc6641b494073f8486f645d2fc7fe5fd68dfb8179518a8007e37bf1efaca972600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516110d99190611a5a565b60405180910390a150565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611174576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161116b90611b49565b60405180910390fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb2d56f4b4eea93889fa4525a42644fcfddf8ad3b2f542e09ae44265209c32c19816040516111e49190611a5a565b60405180910390a150565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60015481565b6000600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e85b6125836040518263ffffffff1660e01b81526004016112fc9190611b69565b60206040518083038186803b15801561131457600080fd5b505afa158015611328573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061134c919061192f565b9050919050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611409576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140090611b49565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146114fa5780600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507ff6617582bd919d6d313d7253a1ea66b8cbff22472a33f75c382634fc0e5e8844600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516114f19190611a5a565b60405180910390a15b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146115b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115a890611b49565b60405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507ff561f468c3daae4b32557967fe0c9a47259b806b9419c8c056d3f129194976d6816040516116219190611a5a565b60405180910390a150565b6000600154905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000813590506116bb81611ce9565b92915050565b6000815190506116d081611ce9565b92915050565b60008083601f8401126116e857600080fd5b8235905067ffffffffffffffff81111561170157600080fd5b60208301915083602082028301111561171957600080fd5b9250929050565b60008151905061172f81611d00565b92915050565b60008135905061174481611d17565b92915050565b60008083601f84011261175c57600080fd5b8235905067ffffffffffffffff81111561177557600080fd5b60208301915083600182028301111561178d57600080fd5b9250929050565b6000813590506117a381611d27565b92915050565b6000815190506117b881611d27565b92915050565b6000602082840312156117d057600080fd5b60006117de848285016116ac565b91505092915050565b6000602082840312156117f957600080fd5b6000611807848285016116c1565b91505092915050565b60006020828403121561182257600080fd5b600061183084828501611720565b91505092915050565b60008060006040848603121561184e57600080fd5b600061185c86828701611735565b935050602084013567ffffffffffffffff81111561187957600080fd5b611885868287016116d6565b92509250509250925092565b600080600080604085870312156118a757600080fd5b600085013567ffffffffffffffff8111156118c157600080fd5b6118cd8782880161174a565b9450945050602085013567ffffffffffffffff8111156118ec57600080fd5b6118f88782880161174a565b925092505092959194509250565b60006020828403121561191857600080fd5b600061192684828501611794565b91505092915050565b60006020828403121561194157600080fd5b600061194f848285016117a9565b91505092915050565b60006119648383611970565b60208301905092915050565b61197981611bce565b82525050565b61198881611bce565b82525050565b600061199982611b94565b6119a38185611bac565b93506119ae83611b84565b8060005b838110156119df5781516119c68882611958565b97506119d183611b9f565b9250506001810190506119b2565b5085935050505092915050565b6119f581611be0565b82525050565b6000611a078385611bbd565b9350611a14838584611c28565b611a1d83611caf565b840190509392505050565b6000611a35601883611bbd565b9150611a4082611cc0565b602082019050919050565b611a5481611c1e565b82525050565b6000602082019050611a6f600083018461197f565b92915050565b6000606082019050611a8a600083018761197f565b8181036020830152611a9d8185876119fb565b9050611aac604083018461197f565b95945050505050565b60006020820190508181036000830152611acf818461198e565b905092915050565b6000602082019050611aec60008301846119ec565b92915050565b60006080820190508181036000830152611b0d81888a6119fb565b9050611b1c602083018761197f565b611b29604083018661197f565b8181036060830152611b3c8184866119fb565b9050979650505050505050565b60006020820190508181036000830152611b6281611a28565b9050919050565b6000602082019050611b7e6000830184611a4b565b92915050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611bd982611bfe565b9050919050565b60008115159050919050565b6000611bf782611bce565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b6000611c4282611c1e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611c7557611c74611c80565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f8301169050919050565b7f4f6e6c79206f776e65722063616e2063616c6c20746869730000000000000000600082015250565b611cf281611bce565b8114611cfd57600080fd5b50565b611d0981611bec565b8114611d1457600080fd5b50565b60028110611d2457600080fd5b50565b611d3081611c1e565b8114611d3b57600080fd5b5056fea2646970667358221220f7a33ef2d376550ee89f0b25cb2d5f8b9ae82269c55fd5f8f8f9e9b47e8c6fd764736f6c63430008040033";

export class BadgeRegistry__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BadgeRegistry> {
    return super.deploy(overrides || {}) as Promise<BadgeRegistry>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BadgeRegistry {
    return super.attach(address) as BadgeRegistry;
  }
  connect(signer: Signer): BadgeRegistry__factory {
    return super.connect(signer) as BadgeRegistry__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BadgeRegistryInterface {
    return new utils.Interface(_abi) as BadgeRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BadgeRegistry {
    return new Contract(address, _abi, signerOrProvider) as BadgeRegistry;
  }
}
