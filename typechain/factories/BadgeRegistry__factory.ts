/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BadgeRegistry, BadgeRegistryInterface } from "../BadgeRegistry";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "entityAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "entityName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "genesisTokenHolder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "permissionToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "badgeToken",
        type: "address",
      },
    ],
    name: "EntityRegistered",
    type: "event",
  },
  {
    inputs: [],
    name: "badgeGnosisSafe",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "badgePriceOracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "badgeTokenEntityReverseRecord",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "badgeTokenFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "badgeXPToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseMinimumStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "certifiedRegistries",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deployer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "entities",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "entityFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum BadgeRegistry.EntityReverseRecordType",
        name: "tokenType",
        type: "uint8",
      },
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
    ],
    name: "filterAddressesForEntityReverseRecord",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "level",
        type: "uint8",
      },
    ],
    name: "getBadgePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBadgeTokenFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBadgeXPToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseMinimumStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntityFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPermissionTokenFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRecoveryOracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSafe",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "isRegistered",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
    ],
    name: "isRegistryCertified",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "permTokenEntityReverseRecord",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "permissionTokenFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "recoveryOracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "entityName",
        type: "string",
      },
      {
        internalType: "string",
        name: "genesisTokenURI",
        type: "string",
      },
      {
        internalType: "bool",
        name: "deployTokens",
        type: "bool",
      },
    ],
    name: "registerEntity",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_badgePriceOracle",
        type: "address",
      },
    ],
    name: "setBadgePriceOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_badgeTokenFactory",
        type: "address",
      },
    ],
    name: "setBadgeTokenFactory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_badgeXPToken",
        type: "address",
      },
    ],
    name: "setBadgeXPToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_baseMinimumStake",
        type: "uint256",
      },
    ],
    name: "setBaseMinimumStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_certifiedRegistry",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_certified",
        type: "bool",
      },
    ],
    name: "setCertifiedRegistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_entityFactory",
        type: "address",
      },
    ],
    name: "setEntityFactory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_permissionTokenFactory",
        type: "address",
      },
    ],
    name: "setPermissionTokenFactory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recoveryOracle",
        type: "address",
      },
    ],
    name: "setRecoveryOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "perm",
        type: "address",
      },
      {
        internalType: "address",
        name: "badge",
        type: "address",
      },
    ],
    name: "setTokenReverseRecords",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555066354a6ba7a18000600c5534801561005d57600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600b60003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550612572806101056000396000f3fe6080604052600436106101f95760003560e01c8063745851e21161010d578063bb0a69b0116100a0578063d2502a981161006f578063d2502a9814610750578063d5f3948814610779578063d6b66c58146107a4578063eab15067146107cd578063ec700190146107f8576101f9565b8063bb0a69b014610696578063bfbaade7146106bf578063c3c5a547146106e8578063cdd8ee7f14610725576101f9565b8063a59cf7e1116100dc578063a59cf7e1146105da578063a785646214610605578063adb4bd4f14610642578063b4bf50751461066b576101f9565b8063745851e2146105415780637d0903781461056a5780639d1c1b8214610586578063a4714b9a146105b1576101f9565b806330f3130e1161019057806350ed05221161015f57806350ed05221461044657806354356f37146104715780635b4146c11461049c5780635f74981f146104d957806368bc573e14610516576101f9565b806330f3130e1461038857806339c2c47f146103b35780633a439fa1146103de5780634849a7ed14610409576101f9565b806327a462fe116101cc57806327a462fe146102ce5780632af7ca6d146102f95780632e7fdc94146103365780632e8603151461035f576101f9565b806309c33619146101fe57806313c91bd7146102295780631d8ee48a146102665780631e93e397146102a3575b600080fd5b34801561020a57600080fd5b50610213610823565b60405161022091906120c9565b60405180910390f35b34801561023557600080fd5b50610250600480360381019061024b9190611eee565b610849565b60405161025d9190612262565b60405180910390f35b34801561027257600080fd5b5061028d60048036038101906102889190611cc8565b6108fd565b60405161029a9190612162565b60405180910390f35b3480156102af57600080fd5b506102b861091d565b6040516102c591906120c9565b60405180910390f35b3480156102da57600080fd5b506102e3610947565b6040516102f091906120c9565b60405180910390f35b34801561030557600080fd5b50610320600480360381019061031b9190611cc8565b610971565b60405161032d91906120c9565b60405180910390f35b34801561034257600080fd5b5061035d60048036038101906103589190611cc8565b6109a4565b005b34801561036b57600080fd5b5061038660048036038101906103819190611cc8565b610a76565b005b34801561039457600080fd5b5061039d610b48565b6040516103aa9190612262565b60405180910390f35b3480156103bf57600080fd5b506103c8610b52565b6040516103d59190612262565b60405180910390f35b3480156103ea57600080fd5b506103f3610b58565b60405161040091906120c9565b60405180910390f35b34801561041557600080fd5b50610430600480360381019061042b9190611cc8565b610b7e565b60405161043d9190612162565b60405180910390f35b34801561045257600080fd5b5061045b610b9e565b60405161046891906120c9565b60405180910390f35b34801561047d57600080fd5b50610486610bc4565b60405161049391906120c9565b60405180910390f35b3480156104a857600080fd5b506104c360048036038101906104be9190611cc8565b610bea565b6040516104d091906120c9565b60405180910390f35b3480156104e557600080fd5b5061050060048036038101906104fb9190611dbb565b610c1d565b60405161050d9190612140565b60405180910390f35b34801561052257600080fd5b5061052b610ec6565b60405161053891906120c9565b60405180910390f35b34801561054d57600080fd5b5061056860048036038101906105639190611cc8565b610ef0565b005b610584600480360381019061057f9190611e13565b610fc2565b005b34801561059257600080fd5b5061059b611442565b6040516105a891906120c9565b60405180910390f35b3480156105bd57600080fd5b506105d860048036038101906105d39190611cc8565b611468565b005b3480156105e657600080fd5b506105ef61153a565b6040516105fc91906120c9565b60405180910390f35b34801561061157600080fd5b5061062c60048036038101906106279190611cc8565b611564565b6040516106399190612162565b60405180910390f35b34801561064e57600080fd5b5061066960048036038101906106649190611d1a565b6115ba565b005b34801561067757600080fd5b5061068061174d565b60405161068d91906120c9565b60405180910390f35b3480156106a257600080fd5b506106bd60048036038101906106b89190611d56565b611777565b005b3480156106cb57600080fd5b506106e660048036038101906106e19190611e9c565b611860565b005b3480156106f457600080fd5b5061070f600480360381019061070a9190611cc8565b6118f8565b60405161071c9190612162565b60405180910390f35b34801561073157600080fd5b5061073a61194e565b60405161074791906120c9565b60405180910390f35b34801561075c57600080fd5b5061077760048036038101906107729190611cc8565b611974565b005b34801561078557600080fd5b5061078e611a46565b60405161079b91906120c9565b60405180910390f35b3480156107b057600080fd5b506107cb60048036038101906107c69190611cc8565b611a6a565b005b3480156107d957600080fd5b506107e2611b3c565b6040516107ef91906120c9565b60405180910390f35b34801561080457600080fd5b5061080d611b66565b60405161081a91906120c9565b60405180910390f35b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d9f05a4d836040518263ffffffff1660e01b81526004016108a6919061227d565b60206040518083038186803b1580156108be57600080fd5b505afa1580156108d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f69190611ec5565b9050919050565b60086020528060005260406000206000915054906101000a900460ff1681565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600a6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a32576040517f973d02cb000000000000000000000000000000000000000000000000000000008152600401610a2990612222565b60405180910390fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b04576040517f973d02cb000000000000000000000000000000000000000000000000000000008152600401610afb90612222565b60405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600c54905090565b600c5481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600b6020528060005260406000206000915054906101000a900460ff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60096020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606000806001811115610c5a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b856001811115610c93577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610c9f57600a610ca2565b60095b905060008484905067ffffffffffffffff811115610ce9577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610d175781602001602082028036833780820191505090505b50905060005b85859050811015610eb9576000868683818110610d63577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050602002016020810190610d789190611cc8565b905060008460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600860008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610ea45781848481518110610e69577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b50508080610eb190612363565b915050610d1d565b8193505050509392505050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f7e576040517f973d02cb000000000000000000000000000000000000000000000000000000008152600401610f7590612222565b60405180910390fd5b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639a6aff8b8787600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16338989896040518863ffffffff1660e01b815260040161104d979695949392919061217d565b602060405180830381600087803b15801561106757600080fd5b505af115801561107b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109f9190611d92565b905060008190506001600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060008084156113f657600c5434101561114c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611143906121e2565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff16635be0eefb6040518163ffffffff1660e01b815260040160206040518083038186803b15801561119257600080fd5b505afa1580156111a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ca9190611cf1565b91508373ffffffffffffffffffffffffffffffffffffffff1663dd75b3f66040518163ffffffff1660e01b815260040160206040518083038186803b15801561121257600080fd5b505afa158015611226573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061124a9190611cf1565b905060008273ffffffffffffffffffffffffffffffffffffffff1634604051611272906120b4565b60006040518083038185875af1925050503d80600081146112af576040519150601f19603f3d011682016040523d82523d6000602084013e6112b4565b606091505b50509050806112f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112ef90612202565b60405180910390fd5b83600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b7fa07c9c0b87be8f24d06157f823dde07d0c0ef0fc0d0debcf32beef051209e45d838a8a33858760405161142f969594939291906120e4565b60405180910390a1505050505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146114f6576040517f973d02cb0000000000000000000000000000000000000000000000000000000081526004016114ed90612222565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60011515600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151461164d576040517f973d02cb00000000000000000000000000000000000000000000000000000000815260040161164490612242565b60405180910390fd5b33600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611805576040517f973d02cb0000000000000000000000000000000000000000000000000000000081526004016117fc90612222565b60405180910390fd5b80600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146118ee576040517f973d02cb0000000000000000000000000000000000000000000000000000000081526004016118e590612222565b60405180910390fd5b80600c8190555050565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611a02576040517f973d02cb0000000000000000000000000000000000000000000000000000000081526004016119f990612222565b60405180910390fd5b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611af8576040517f973d02cb000000000000000000000000000000000000000000000000000000008152600401611aef90612222565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081359050611b9b816124b9565b92915050565b600081519050611bb0816124b9565b92915050565b60008083601f840112611bc857600080fd5b8235905067ffffffffffffffff811115611be157600080fd5b602083019150836020820283011115611bf957600080fd5b9250929050565b600081359050611c0f816124d0565b92915050565b600081519050611c24816124e7565b92915050565b600081359050611c39816124fe565b92915050565b60008083601f840112611c5157600080fd5b8235905067ffffffffffffffff811115611c6a57600080fd5b602083019150836001820283011115611c8257600080fd5b9250929050565b600081359050611c988161250e565b92915050565b600081519050611cad8161250e565b92915050565b600081359050611cc281612525565b92915050565b600060208284031215611cda57600080fd5b6000611ce884828501611b8c565b91505092915050565b600060208284031215611d0357600080fd5b6000611d1184828501611ba1565b91505092915050565b60008060408385031215611d2d57600080fd5b6000611d3b85828601611b8c565b9250506020611d4c85828601611b8c565b9150509250929050565b60008060408385031215611d6957600080fd5b6000611d7785828601611b8c565b9250506020611d8885828601611c00565b9150509250929050565b600060208284031215611da457600080fd5b6000611db284828501611c15565b91505092915050565b600080600060408486031215611dd057600080fd5b6000611dde86828701611c2a565b935050602084013567ffffffffffffffff811115611dfb57600080fd5b611e0786828701611bb6565b92509250509250925092565b600080600080600060608688031215611e2b57600080fd5b600086013567ffffffffffffffff811115611e4557600080fd5b611e5188828901611c3f565b9550955050602086013567ffffffffffffffff811115611e7057600080fd5b611e7c88828901611c3f565b93509350506040611e8f88828901611c00565b9150509295509295909350565b600060208284031215611eae57600080fd5b6000611ebc84828501611c89565b91505092915050565b600060208284031215611ed757600080fd5b6000611ee584828501611c9e565b91505092915050565b600060208284031215611f0057600080fd5b6000611f0e84828501611cb3565b91505092915050565b6000611f238383611f2f565b60208301905092915050565b611f38816122ed565b82525050565b611f47816122ed565b82525050565b6000611f58826122a8565b611f6281856122c0565b9350611f6d83612298565b8060005b83811015611f9e578151611f858882611f17565b9750611f90836122b3565b925050600181019050611f71565b5085935050505092915050565b611fb4816122ff565b82525050565b6000611fc683856122dc565b9350611fd3838584612354565b611fdc836123db565b840190509392505050565b6000611ff46010836122dc565b9150611fff826123ec565b602082019050919050565b60006120176021836122dc565b915061202282612415565b604082019050919050565b600061203a601b836122dc565b915061204582612464565b602082019050919050565b600061205d6015836122dc565b91506120688261248d565b602082019050919050565b60006120806000836122d1565b915061208b826124b6565b600082019050919050565b61209f8161233d565b82525050565b6120ae81612347565b82525050565b60006120bf82612073565b9150819050919050565b60006020820190506120de6000830184611f3e565b92915050565b600060a0820190506120f96000830189611f3e565b818103602083015261210c818789611fba565b905061211b6040830186611f3e565b6121286060830185611f3e565b6121356080830184611f3e565b979650505050505050565b6000602082019050818103600083015261215a8184611f4d565b905092915050565b60006020820190506121776000830184611fab565b92915050565b600060a082019050818103600083015261219881898b611fba565b90506121a76020830188611f3e565b6121b46040830187611f3e565b81810360608301526121c7818587611fba565b90506121d66080830184611fab565b98975050505050505050565b600060208201905081810360008301526121fb81611fe7565b9050919050565b6000602082019050818103600083015261221b8161200a565b9050919050565b6000602082019050818103600083015261223b8161202d565b9050919050565b6000602082019050818103600083015261225b81612050565b9050919050565b60006020820190506122776000830184612096565b92915050565b600060208201905061229260008301846120a5565b92915050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b60006122f88261231d565b9050919050565b60008115159050919050565b6000612316826122ed565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b82818337600083830152505050565b600061236e8261233d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156123a1576123a06123ac565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f8301169050919050565b7f4e6f7420656e6f756768207374616b6500000000000000000000000000000000600082015250565b7f4661696c656420746f2073656e642065746820746f20626164676520746f6b6560008201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b7f4f6e6c79206465706c6f7965722063616e2063616c6c20746869730000000000600082015250565b7f456e74697479206e6f7420726567697374657265640000000000000000000000600082015250565b50565b6124c2816122ed565b81146124cd57600080fd5b50565b6124d9816122ff565b81146124e457600080fd5b50565b6124f08161230b565b81146124fb57600080fd5b50565b6002811061250b57600080fd5b50565b6125178161233d565b811461252257600080fd5b50565b61252e81612347565b811461253957600080fd5b5056fea264697066735822122063b091b5abcd248618a0eae6924a299ff5ecc447b3fceb8593796ca3dc7daa9464736f6c63430008040033";

export class BadgeRegistry__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BadgeRegistry> {
    return super.deploy(overrides || {}) as Promise<BadgeRegistry>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BadgeRegistry {
    return super.attach(address) as BadgeRegistry;
  }
  connect(signer: Signer): BadgeRegistry__factory {
    return super.connect(signer) as BadgeRegistry__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BadgeRegistryInterface {
    return new utils.Interface(_abi) as BadgeRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BadgeRegistry {
    return new Contract(address, _abi, signerOrProvider) as BadgeRegistry;
  }
}
