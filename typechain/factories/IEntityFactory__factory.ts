/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IEntityFactory,
  IEntityFactoryInterface,
} from "../IEntityFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_entityName",
        type: "string",
      },
      {
        internalType: "address",
        name: "recoveryOracle",
        type: "address",
      },
      {
        internalType: "address",
        name: "genesisUser",
        type: "address",
      },
      {
        internalType: "string",
        name: "genesisTokenURI",
        type: "string",
      },
      {
        internalType: "bool",
        name: "deployTokens",
        type: "bool",
      },
    ],
    name: "createEntity",
    outputs: [
      {
        internalType: "contract IEntity",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IEntityFactory__factory {
  static readonly abi = _abi;
  static createInterface(): IEntityFactoryInterface {
    return new utils.Interface(_abi) as IEntityFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IEntityFactory {
    return new Contract(address, _abi, signerOrProvider) as IEntityFactory;
  }
}
