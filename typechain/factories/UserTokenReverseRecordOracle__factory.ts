/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  UserTokenReverseRecordOracle,
  UserTokenReverseRecordOracleInterface,
} from "../UserTokenReverseRecordOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "badgeRegistry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "registry",
        type: "address",
      },
    ],
    name: "addBadgeReverseRecord",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "registry",
        type: "address",
      },
    ],
    name: "addPermTokenReverseRecord",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "badgeTokenListReverseRecord",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "badgeTokenReverseRecordIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "certifiedRegistries",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "doesBadgeReverseRecordExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "doesPermReverseRecordExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getBadgeReverseRecord",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getPermTokenReverseRecord",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "permTokenListReverseRecord",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "permTokenReverseRecordIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "registry",
        type: "address",
      },
    ],
    name: "removeBadgeReverseRecord",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "registry",
        type: "address",
      },
    ],
    name: "removePermReverseRecord",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registry",
        type: "address",
      },
      {
        internalType: "bool",
        name: "certified",
        type: "bool",
      },
    ],
    name: "setRegistryCertified",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001b6a38038062001b6a8339818101604052810190620000379190620000ed565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505062000167565b600081519050620000e7816200014d565b92915050565b6000602082840312156200010057600080fd5b60006200011084828501620000d6565b91505092915050565b600062000126826200012d565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620001588162000119565b81146200016457600080fd5b50565b6119f380620001776000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063576b11f011610097578063ab93128f11610066578063ab93128f146102a8578063bfd5b1ae146102d8578063d82b3cfc14610308578063fda1729614610324576100f5565b8063576b11f01461020e578063652997231461023e5780638cbd28ca1461026e5780638da5cb5b1461028a576100f5565b80633dd774f2116100d35780633dd774f2146101625780633f57159714610192578063441fe0dc146101c25780634849a7ed146101de576100f5565b806301d13e03146100fa5780631921794a1461011657806337747b0414610146575b600080fd5b610114600480360381019061010f9190611579565b610354565b005b610130600480360381019061012b9190611514565b61043d565b60405161013d9190611750565b60405180910390f35b610160600480360381019061015b919061153d565b61050a565b005b61017c6004803603810190610177919061153d565b6107b7565b60405161018991906117ed565b60405180910390f35b6101ac60048036038101906101a791906115b5565b6107dc565b6040516101b99190611735565b60405180910390f35b6101dc60048036038101906101d7919061153d565b61082a565b005b6101f860048036038101906101f39190611514565b610ad7565b6040516102059190611772565b60405180910390f35b6102286004803603810190610223919061153d565b610af7565b60405161023591906117ed565b60405180910390f35b6102586004803603810190610253919061153d565b610b1c565b6040516102659190611772565b60405180910390f35b6102886004803603810190610283919061153d565b610c77565b005b610292610f4f565b60405161029f9190611735565b60405180910390f35b6102c260048036038101906102bd91906115b5565b610f73565b6040516102cf9190611735565b60405180910390f35b6102f260048036038101906102ed9190611514565b610fc1565b6040516102ff9190611750565b60405180910390f35b610322600480360381019061031d919061153d565b61108e565b005b61033e6004803603810190610339919061153d565b611365565b60405161034b9190611772565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103e2576040517f973d02cb0000000000000000000000000000000000000000000000000000000081526004016103d9906117cd565b60405180910390fd5b80600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6060600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156104fe57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116104b4575b50505050509050919050565b80600560008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610597576040517f973d02cb00000000000000000000000000000000000000000000000000000000815260040161058e9061178d565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663c3c5a547336040518263ffffffff1660e01b81526004016105d09190611735565b60206040518083038186803b1580156105e857600080fd5b505afa1580156105fc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062091906115f1565b61065f576040517f973d02cb000000000000000000000000000000000000000000000000000000008152600401610656906117ad565b60405180910390fd5b6106698333610b1c565b156107b2576000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610768577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b505050565b6004602052816000526040600020602052806000526040600020600091509150505481565b600160205281600052604060002081815481106107f857600080fd5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b80600560008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166108b7576040517f973d02cb0000000000000000000000000000000000000000000000000000000081526004016108ae9061178d565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663c3c5a547336040518263ffffffff1660e01b81526004016108f09190611735565b60206040518083038186803b15801561090857600080fd5b505afa15801561091c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094091906115f1565b61097f576040517f973d02cb000000000000000000000000000000000000000000000000000000008152600401610976906117ad565b60405180910390fd5b6109898333611365565b15610ad2576000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610a88577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b505050565b60056020528060005260406000206000915054906101000a900460ff1681565b6002602052816000526040600020602052806000526040600020600091509150505481565b600080600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508273ffffffffffffffffffffffffffffffffffffffff16600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610c2c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161491505092915050565b80600560008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610d04576040517f973d02cb000000000000000000000000000000000000000000000000000000008152600401610cfb9061178d565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663c3c5a547336040518263ffffffff1660e01b8152600401610d3d9190611735565b60206040518083038186803b158015610d5557600080fd5b505afa158015610d69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8d91906115f1565b610dcc576040517f973d02cb000000000000000000000000000000000000000000000000000000008152600401610dc3906117ad565b60405180910390fd5b610dd68333611365565b610f4a57600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050610ec99190611852565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60036020528160005260406000208181548110610f8f57600080fd5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561108257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611038575b50505050509050919050565b80600560008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661111b576040517f973d02cb0000000000000000000000000000000000000000000000000000000081526004016111129061178d565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663c3c5a547336040518263ffffffff1660e01b81526004016111549190611735565b60206040518083038186803b15801561116c57600080fd5b505afa158015611180573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111a491906115f1565b6111e3576040517f973d02cb0000000000000000000000000000000000000000000000000000000081526004016111da906117ad565b60405180910390fd5b6111ed8333610b1c565b61136057600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506112df9190611852565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b505050565b600080600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508273ffffffffffffffffffffffffffffffffffffffff16600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110611475577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161491505092915050565b6000813590506114cf81611978565b92915050565b6000813590506114e48161198f565b92915050565b6000815190506114f98161198f565b92915050565b60008135905061150e816119a6565b92915050565b60006020828403121561152657600080fd5b6000611534848285016114c0565b91505092915050565b6000806040838503121561155057600080fd5b600061155e858286016114c0565b925050602061156f858286016114c0565b9150509250929050565b6000806040838503121561158c57600080fd5b600061159a858286016114c0565b92505060206115ab858286016114d5565b9150509250929050565b600080604083850312156115c857600080fd5b60006115d6858286016114c0565b92505060206115e7858286016114ff565b9150509250929050565b60006020828403121561160357600080fd5b6000611611848285016114ea565b91505092915050565b60006116268383611632565b60208301905092915050565b61163b81611886565b82525050565b61164a81611886565b82525050565b600061165b82611818565b6116658185611830565b935061167083611808565b8060005b838110156116a1578151611688888261161a565b975061169383611823565b925050600181019050611674565b5085935050505092915050565b6116b781611898565b82525050565b60006116ca601883611841565b91506116d5826118fd565b602082019050919050565b60006116ed601783611841565b91506116f882611926565b602082019050919050565b6000611710601883611841565b915061171b8261194f565b602082019050919050565b61172f816118c4565b82525050565b600060208201905061174a6000830184611641565b92915050565b6000602082019050818103600083015261176a8184611650565b905092915050565b600060208201905061178760008301846116ae565b92915050565b600060208201905081810360008301526117a6816116bd565b9050919050565b600060208201905081810360008301526117c6816116e0565b9050919050565b600060208201905081810360008301526117e681611703565b9050919050565b60006020820190506118026000830184611726565b92915050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061185d826118c4565b9150611868836118c4565b92508282101561187b5761187a6118ce565b5b828203905092915050565b6000611891826118a4565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e6f742061206365727469666965642072656769737472790000000000000000600082015250565b7f4e6f742061207265676973746572656420656e74697479000000000000000000600082015250565b7f4f6e6c79206f776e65722063616e2063616c6c20746869730000000000000000600082015250565b61198181611886565b811461198c57600080fd5b50565b61199881611898565b81146119a357600080fd5b50565b6119af816118c4565b81146119ba57600080fd5b5056fea2646970667358221220e81098531ad3fac9d146bcee7192f54df9e139eb7cde9be4dc68b5172029f5ed64736f6c63430008040033";

export class UserTokenReverseRecordOracle__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    badgeRegistry: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UserTokenReverseRecordOracle> {
    return super.deploy(
      badgeRegistry,
      overrides || {}
    ) as Promise<UserTokenReverseRecordOracle>;
  }
  getDeployTransaction(
    badgeRegistry: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(badgeRegistry, overrides || {});
  }
  attach(address: string): UserTokenReverseRecordOracle {
    return super.attach(address) as UserTokenReverseRecordOracle;
  }
  connect(signer: Signer): UserTokenReverseRecordOracle__factory {
    return super.connect(signer) as UserTokenReverseRecordOracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UserTokenReverseRecordOracleInterface {
    return new utils.Interface(_abi) as UserTokenReverseRecordOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UserTokenReverseRecordOracle {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as UserTokenReverseRecordOracle;
  }
}
