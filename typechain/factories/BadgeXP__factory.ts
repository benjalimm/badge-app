/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BadgeXP, BadgeXPInterface } from "../BadgeXP";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_badgeRegistry",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recoveryOracle",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "Failure",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "badgeRegistry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "registry",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deployer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "level",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "registry",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
    ],
    name: "recover",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "recoveryOracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_xpOracle",
        type: "address",
      },
    ],
    name: "setXPOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalXP",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "xpOracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200186238038062001862833981810160405281019062000037919062000118565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620001a7565b60008151905062000112816200018d565b92915050565b600080604083850312156200012c57600080fd5b60006200013c8582860162000101565b92505060206200014f8582860162000101565b9150509250929050565b600062000166826200016d565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620001988162000159565b8114620001a457600080fd5b50565b6116ab80620001b76000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063aa93bfa8116100ad578063dd62ed3e11610071578063dd62ed3e1461030c578063e3d670d71461033c578063ea3e7cef1461036c578063ef265d6d1461038a578063ef72c8cd146103a657610121565b8063aa93bfa81461027a578063cdd8ee7f14610298578063d5f39488146102b6578063da39b3e7146102d4578063dac94865146102f057610121565b806323b872dd116100f457806323b872dd146101ae578063313ce567146101de57806370a08231146101fc57806395d89b411461022c578063a9059cbb1461024a57610121565b806306fdde0314610126578063095ea7b3146101445780630cd865ec1461017457806318160ddd14610190575b600080fd5b61012e6103c4565b60405161013b919061129b565b60405180910390f35b61015e6004803603810190610159919061101c565b610401565b60405161016b9190611280565b60405180910390f35b61018e60048036038101906101899190610f68565b610409565b005b610198610703565b6040516101a5919061135d565b60405180910390f35b6101c860048036038101906101c39190610fcd565b61070d565b6040516101d59190611280565b60405180910390f35b6101e6610716565b6040516101f39190611378565b60405180910390f35b61021660048036038101906102119190610f68565b61071f565b604051610223919061135d565b60405180910390f35b610234610768565b604051610241919061129b565b60405180910390f35b610264600480360381019061025f919061101c565b6107a5565b6040516102719190611280565b60405180910390f35b6102826107ad565b60405161028f919061135d565b60405180910390f35b6102a06107b3565b6040516102ad9190611265565b60405180910390f35b6102be6107d9565b6040516102cb9190611265565b60405180910390f35b6102ee60048036038101906102e991906110aa565b6107fd565b005b61030a60048036038101906103059190610f68565b610b3a565b005b61032660048036038101906103219190610f91565b610c0c565b604051610333919061135d565b60405180910390f35b61035660048036038101906103519190610f68565b610c14565b604051610363919061135d565b60405180910390f35b610374610c2c565b6040516103819190611265565b60405180910390f35b6103a4600480360381019061039f91906110aa565b610c52565b005b6103ae610ee0565b6040516103bb9190611265565b60405180910390f35b60606040518060400160405280600f81526020017f426164676520585020706f696e74730000000000000000000000000000000000815250905090565b600092915050565b600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663511865e960e01b8460405160240161045e9190611265565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516104c8919061124e565b6000604051808303816000865af19150503d8060008114610505576040519150601f19603f3d011682016040523d82523d6000602084013e61050a565b606091505b50915091508161054f576040517ffd5de276000000000000000000000000000000000000000000000000000000008152600401610546906112bd565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff1661056f82610f06565b73ffffffffffffffffffffffffffffffffffffffff1614156106c3576000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516106b5919061135d565b60405180910390a3506106fe565b6040517f973d02cb0000000000000000000000000000000000000000000000000000000081526004016106f5906112dd565b60405180910390fd5b505050565b6000600154905090565b60009392505050565b60006002905090565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606040518060400160405280600381526020017f4258500000000000000000000000000000000000000000000000000000000000815250905090565b600092915050565b60015481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b80600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a7856462826040518263ffffffff1660e01b81526004016108599190611265565b60206040518083038186803b15801561087157600080fd5b505afa158015610885573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a99190611058565b6108e8576040517f973d02cb0000000000000000000000000000000000000000000000000000000081526004016108df9061133d565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663c3c5a547336040518263ffffffff1660e01b81526004016109219190611265565b60206040518083038186803b15801561093957600080fd5b505afa15801561094d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109719190611058565b6109b0576040517f973d02cb0000000000000000000000000000000000000000000000000000000081526004016109a79061131d565b60405180910390fd5b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f85d6f9866040518263ffffffff1660e01b8152600401610a0d919061135d565b60206040518083038186803b158015610a2557600080fd5b505afa158015610a39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5d9190611081565b905080600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610aae91906113c5565b925050819055508060016000828254610ac791906113c5565b925050819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610b2b919061135d565b60405180910390a35050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bc8576040517f973d02cb000000000000000000000000000000000000000000000000000000008152600401610bbf906112fd565b60405180910390fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600092915050565b60026020528060005260406000206000915090505481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b80600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a7856462826040518263ffffffff1660e01b8152600401610cae9190611265565b60206040518083038186803b158015610cc657600080fd5b505afa158015610cda573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cfe9190611058565b610d3d576040517f973d02cb000000000000000000000000000000000000000000000000000000008152600401610d349061133d565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663c3c5a547336040518263ffffffff1660e01b8152600401610d769190611265565b60206040518083038186803b158015610d8e57600080fd5b505afa158015610da2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc69190611058565b610e05576040517f973d02cb000000000000000000000000000000000000000000000000000000008152600401610dfc9061131d565b60405180910390fd5b83600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e54919061141b565b925050819055508360016000828254610e6d919061141b565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef86604051610ed2919061135d565b60405180910390a350505050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060208201519050919050565b600081359050610f2381611630565b92915050565b600081519050610f3881611647565b92915050565b600081359050610f4d8161165e565b92915050565b600081519050610f628161165e565b92915050565b600060208284031215610f7a57600080fd5b6000610f8884828501610f14565b91505092915050565b60008060408385031215610fa457600080fd5b6000610fb285828601610f14565b9250506020610fc385828601610f14565b9150509250929050565b600080600060608486031215610fe257600080fd5b6000610ff086828701610f14565b935050602061100186828701610f14565b925050604061101286828701610f3e565b9150509250925092565b6000806040838503121561102f57600080fd5b600061103d85828601610f14565b925050602061104e85828601610f3e565b9150509250929050565b60006020828403121561106a57600080fd5b600061107884828501610f29565b91505092915050565b60006020828403121561109357600080fd5b60006110a184828501610f53565b91505092915050565b6000806000606084860312156110bf57600080fd5b60006110cd86828701610f3e565b93505060206110de86828701610f14565b92505060406110ef86828701610f14565b9150509250925092565b6111028161144f565b82525050565b61111181611461565b82525050565b600061112282611393565b61112c81856113a9565b935061113c8185602086016114a4565b80840191505092915050565b60006111538261139e565b61115d81856113b4565b935061116d8185602086016114a4565b61117681611506565b840191505092915050565b600061118e601e836113b4565b915061119982611517565b602082019050919050565b60006111b1602a836113b4565b91506111bc82611540565b604082019050919050565b60006111d46015836113b4565b91506111df8261158f565b602082019050919050565b60006111f76024836113b4565b9150611202826115b8565b604082019050919050565b600061121a6019836113b4565b915061122582611607565b602082019050919050565b6112398161148d565b82525050565b61124881611497565b82525050565b600061125a8284611117565b915081905092915050565b600060208201905061127a60008301846110f9565b92915050565b60006020820190506112956000830184611108565b92915050565b600060208201905081810360008301526112b58184611148565b905092915050565b600060208201905081810360008301526112d681611181565b9050919050565b600060208201905081810360008301526112f6816111a4565b9050919050565b60006020820190508181036000830152611316816111c7565b9050919050565b60006020820190508181036000830152611336816111ea565b9050919050565b600060208201905081810360008301526113568161120d565b9050919050565b60006020820190506113726000830184611230565b92915050565b600060208201905061138d600083018461123f565b92915050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006113d08261148d565b91506113db8361148d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156114105761140f6114d7565b5b828201905092915050565b60006114268261148d565b91506114318361148d565b925082821015611444576114436114d7565b5b828203905092915050565b600061145a8261146d565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b838110156114c25780820151818401526020810190506114a7565b838111156114d1576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f8301169050919050565b7f43616c6c20746f207265636f76657279206f7261636c65206661696c65640000600082015250565b7f4f6e6c79207265636f7665727920616464726573732063616e207265636f766560008201527f7220426164676520585000000000000000000000000000000000000000000000602082015250565b7f4f6e6c79206465706c6f7965722063616e207365740000000000000000000000600082015250565b7f456e74697479206973206e6f74207265676973746572656420746f207265676960008201527f7374727900000000000000000000000000000000000000000000000000000000602082015250565b7f5265676973747279206973206e6f742063657274696669656400000000000000600082015250565b6116398161144f565b811461164457600080fd5b50565b61165081611461565b811461165b57600080fd5b50565b6116678161148d565b811461167257600080fd5b5056fea2646970667358221220edc227e1d4b2240ae62b492b92982ce3ca873d8d9b4718727851db52cf19e74064736f6c63430008040033";

export class BadgeXP__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _badgeRegistry: string,
    _recoveryOracle: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BadgeXP> {
    return super.deploy(
      _badgeRegistry,
      _recoveryOracle,
      overrides || {}
    ) as Promise<BadgeXP>;
  }
  getDeployTransaction(
    _badgeRegistry: string,
    _recoveryOracle: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _badgeRegistry,
      _recoveryOracle,
      overrides || {}
    );
  }
  attach(address: string): BadgeXP {
    return super.attach(address) as BadgeXP;
  }
  connect(signer: Signer): BadgeXP__factory {
    return super.connect(signer) as BadgeXP__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BadgeXPInterface {
    return new utils.Interface(_abi) as BadgeXPInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BadgeXP {
    return new Contract(address, _abi, signerOrProvider) as BadgeXP;
  }
}
