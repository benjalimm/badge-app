/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BadgeXP, BadgeXPInterface } from "../BadgeXP";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_badgeRegistry",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recoveryOracle",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "Failure",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "badgeRegistry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "registry",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "deployer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "level",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "registry",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "xp",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
    ],
    name: "recover",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "recoveryOracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "registry",
        type: "address",
      },
    ],
    name: "resetXP",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_xpOracle",
        type: "address",
      },
    ],
    name: "setXPOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalXP",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userToBadgeTokenLedger",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "xpOracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200234338038062002343833981810160405281019062000037919062000118565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620001a7565b60008151905062000112816200018d565b92915050565b600080604083850312156200012c57600080fd5b60006200013c8582860162000101565b92505060206200014f8582860162000101565b9150509250929050565b600062000166826200016d565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620001988162000159565b8114620001a457600080fd5b50565b61218c80620001b76000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c8063a9059cbb116100b8578063dac948651161007c578063dac9486514610366578063dd62ed3e14610382578063e3d670d7146103b2578063ea3e7cef146103e2578063ef265d6d14610400578063ef72c8cd1461041c57610137565b8063a9059cbb146102ac578063aa93bfa8146102dc578063cdd8ee7f146102fa578063d5f3948814610318578063da39b3e71461033657610137565b8063313ce567116100ff578063313ce567146101f45780633776b7011461021257806370a082311461022e578063886a31eb1461025e57806395d89b411461028e57610137565b806306fdde031461013c578063095ea7b31461015a5780630cd865ec1461018a57806318160ddd146101a657806323b872dd146101c4575b600080fd5b61014461043a565b6040516101519190611d33565b60405180910390f35b610174600480360381019061016f9190611a2e565b610477565b6040516101819190611d18565b60405180910390f35b6101a4600480360381019061019f9190611951565b61047f565b005b6101ae610779565b6040516101bb9190611e15565b60405180910390f35b6101de60048036038101906101d991906119df565b610783565b6040516101eb9190611d18565b60405180910390f35b6101fc61078c565b6040516102099190611e30565b60405180910390f35b61022c60048036038101906102279190611b0b565b610795565b005b61024860048036038101906102439190611951565b610d55565b6040516102559190611e15565b60405180910390f35b610278600480360381019061027391906119a3565b610d9e565b6040516102859190611e15565b60405180910390f35b610296610dc3565b6040516102a39190611d33565b60405180910390f35b6102c660048036038101906102c19190611a2e565b610e00565b6040516102d39190611d18565b60405180910390f35b6102e4610e08565b6040516102f19190611e15565b60405180910390f35b610302610e0e565b60405161030f9190611cfd565b60405180910390f35b610320610e34565b60405161032d9190611cfd565b60405180910390f35b610350600480360381019061034b9190611abc565b610e58565b60405161035d9190611e15565b60405180910390f35b610380600480360381019061037b9190611951565b6112ac565b005b61039c600480360381019061039791906119a3565b61137e565b6040516103a99190611e15565b60405180910390f35b6103cc60048036038101906103c79190611951565b611386565b6040516103d99190611e15565b60405180910390f35b6103ea61139e565b6040516103f79190611cfd565b60405180910390f35b61041a60048036038101906104159190611abc565b6113c4565b005b6104246118b4565b6040516104319190611cfd565b60405180910390f35b60606040518060400160405280600f81526020017f426164676520585020706f696e74730000000000000000000000000000000000815250905090565b600092915050565b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663511865e960e01b846040516024016104d49190611cfd565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161053e9190611ce6565b6000604051808303816000865af19150503d806000811461057b576040519150601f19603f3d011682016040523d82523d6000602084013e610580565b606091505b5091509150816105c5576040517ffd5de2760000000000000000000000000000000000000000000000000000000081526004016105bc90611d55565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166105e5826118da565b73ffffffffffffffffffffffffffffffffffffffff161415610739576000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161072b9190611e15565b60405180910390a350610774565b6040517f973d02cb00000000000000000000000000000000000000000000000000000000815260040161076b90611d75565b60405180910390fd5b505050565b6000600154905090565b60009392505050565b60006002905090565b80600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a7856462826040518263ffffffff1660e01b81526004016107f19190611cfd565b60206040518083038186803b15801561080957600080fd5b505afa15801561081d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108419190611a6a565b610880576040517f973d02cb00000000000000000000000000000000000000000000000000000000815260040161087790611df5565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663c3c5a547336040518263ffffffff1660e01b81526004016108b99190611cfd565b60206040518083038186803b1580156108d157600080fd5b505afa1580156108e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109099190611a6a565b610948576040517f973d02cb00000000000000000000000000000000000000000000000000000000815260040161093f90611db5565b60405180910390fd5b848460003373ffffffffffffffffffffffffffffffffffffffff16635be0eefb6040518163ffffffff1660e01b815260040160206040518083038186803b15801561099257600080fd5b505afa1580156109a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ca919061197a565b90506000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080841115610a90576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8790611dd5565b60405180910390fd5b88600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610adf9190611ed3565b9250508190555088600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b359190611e7d565b9250508190555060003373ffffffffffffffffffffffffffffffffffffffff16635be0eefb6040518163ffffffff1660e01b815260040160206040518083038186803b158015610b8457600080fd5b505afa158015610b98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bbc919061197a565b905089600360008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c4a9190611ed3565b9250508190555089600360008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610cdd9190611e7d565b925050819055508773ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8c604051610d419190611e15565b60405180910390a350505050505050505050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6003602052816000526040600020602052806000526040600020600091509150505481565b60606040518060400160405280600381526020017f4258500000000000000000000000000000000000000000000000000000000000815250905090565b600092915050565b60015481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a7856462826040518263ffffffff1660e01b8152600401610eb69190611cfd565b60206040518083038186803b158015610ece57600080fd5b505afa158015610ee2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f069190611a6a565b610f45576040517f973d02cb000000000000000000000000000000000000000000000000000000008152600401610f3c90611df5565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663c3c5a547336040518263ffffffff1660e01b8152600401610f7e9190611cfd565b60206040518083038186803b158015610f9657600080fd5b505afa158015610faa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fce9190611a6a565b61100d576040517f973d02cb00000000000000000000000000000000000000000000000000000000815260040161100490611db5565b60405180910390fd5b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f85d6f9866040518263ffffffff1660e01b81526004016110689190611e15565b60206040518083038186803b15801561108057600080fd5b505afa158015611094573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b89190611a93565b915081600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546111099190611e7d565b9250508190555081600160008282546111229190611e7d565b9250508190555060003373ffffffffffffffffffffffffffffffffffffffff16635be0eefb6040518163ffffffff1660e01b815260040160206040518083038186803b15801561117157600080fd5b505afa158015611185573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111a9919061197a565b905082600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546112379190611e7d565b925050819055508473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8560405161129b9190611e15565b60405180910390a350509392505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461133a576040517f973d02cb00000000000000000000000000000000000000000000000000000000815260040161133190611d95565b60405180910390fd5b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600092915050565b60026020528060005260406000206000915090505481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b80600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a7856462826040518263ffffffff1660e01b81526004016114209190611cfd565b60206040518083038186803b15801561143857600080fd5b505afa15801561144c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114709190611a6a565b6114af576040517f973d02cb0000000000000000000000000000000000000000000000000000000081526004016114a690611df5565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663c3c5a547336040518263ffffffff1660e01b81526004016114e89190611cfd565b60206040518083038186803b15801561150057600080fd5b505afa158015611514573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115389190611a6a565b611577576040517f973d02cb00000000000000000000000000000000000000000000000000000000815260040161156e90611db5565b60405180910390fd5b838360003373ffffffffffffffffffffffffffffffffffffffff16635be0eefb6040518163ffffffff1660e01b815260040160206040518083038186803b1580156115c157600080fd5b505afa1580156115d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115f9919061197a565b90506000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050808411156116bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116b690611dd5565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff16635be0eefb6040518163ffffffff1660e01b815260040160206040518083038186803b15801561170757600080fd5b505afa15801561171b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061173f919061197a565b905088600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546117909190611ed3565b9250508190555088600360008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546118239190611ed3565b92505081905550886001600082825461183c9190611ed3565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8b6040516118a19190611e15565b60405180910390a3505050505050505050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060208201519050919050565b6000813590506118f781612111565b92915050565b60008151905061190c81612111565b92915050565b60008151905061192181612128565b92915050565b6000813590506119368161213f565b92915050565b60008151905061194b8161213f565b92915050565b60006020828403121561196357600080fd5b6000611971848285016118e8565b91505092915050565b60006020828403121561198c57600080fd5b600061199a848285016118fd565b91505092915050565b600080604083850312156119b657600080fd5b60006119c4858286016118e8565b92505060206119d5858286016118e8565b9150509250929050565b6000806000606084860312156119f457600080fd5b6000611a02868287016118e8565b9350506020611a13868287016118e8565b9250506040611a2486828701611927565b9150509250925092565b60008060408385031215611a4157600080fd5b6000611a4f858286016118e8565b9250506020611a6085828601611927565b9150509250929050565b600060208284031215611a7c57600080fd5b6000611a8a84828501611912565b91505092915050565b600060208284031215611aa557600080fd5b6000611ab38482850161193c565b91505092915050565b600080600060608486031215611ad157600080fd5b6000611adf86828701611927565b9350506020611af0868287016118e8565b9250506040611b01868287016118e8565b9150509250925092565b60008060008060808587031215611b2157600080fd5b6000611b2f87828801611927565b9450506020611b40878288016118e8565b9350506040611b51878288016118e8565b9250506060611b62878288016118e8565b91505092959194509250565b611b7781611f07565b82525050565b611b8681611f19565b82525050565b6000611b9782611e4b565b611ba18185611e61565b9350611bb1818560208601611f5c565b80840191505092915050565b6000611bc882611e56565b611bd28185611e6c565b9350611be2818560208601611f5c565b611beb81611fbe565b840191505092915050565b6000611c03601e83611e6c565b9150611c0e82611fcf565b602082019050919050565b6000611c26602a83611e6c565b9150611c3182611ff8565b604082019050919050565b6000611c49601583611e6c565b9150611c5482612047565b602082019050919050565b6000611c6c602483611e6c565b9150611c7782612070565b604082019050919050565b6000611c8f601183611e6c565b9150611c9a826120bf565b602082019050919050565b6000611cb2601983611e6c565b9150611cbd826120e8565b602082019050919050565b611cd181611f45565b82525050565b611ce081611f4f565b82525050565b6000611cf28284611b8c565b915081905092915050565b6000602082019050611d126000830184611b6e565b92915050565b6000602082019050611d2d6000830184611b7d565b92915050565b60006020820190508181036000830152611d4d8184611bbd565b905092915050565b60006020820190508181036000830152611d6e81611bf6565b9050919050565b60006020820190508181036000830152611d8e81611c19565b9050919050565b60006020820190508181036000830152611dae81611c3c565b9050919050565b60006020820190508181036000830152611dce81611c5f565b9050919050565b60006020820190508181036000830152611dee81611c82565b9050919050565b60006020820190508181036000830152611e0e81611ca5565b9050919050565b6000602082019050611e2a6000830184611cc8565b92915050565b6000602082019050611e456000830184611cd7565b92915050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000611e8882611f45565b9150611e9383611f45565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611ec857611ec7611f8f565b5b828201905092915050565b6000611ede82611f45565b9150611ee983611f45565b925082821015611efc57611efb611f8f565b5b828203905092915050565b6000611f1282611f25565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015611f7a578082015181840152602081019050611f5f565b83811115611f89576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f8301169050919050565b7f43616c6c20746f207265636f76657279206f7261636c65206661696c65640000600082015250565b7f4f6e6c79207265636f7665727920616464726573732063616e207265636f766560008201527f7220426164676520585000000000000000000000000000000000000000000000602082015250565b7f4f6e6c79206465706c6f7965722063616e207365740000000000000000000000600082015250565b7f456e74697479206973206e6f74207265676973746572656420746f207265676960008201527f7374727900000000000000000000000000000000000000000000000000000000602082015250565b7f4e6f7420656e6f75676820746f6b656e73000000000000000000000000000000600082015250565b7f5265676973747279206973206e6f742063657274696669656400000000000000600082015250565b61211a81611f07565b811461212557600080fd5b50565b61213181611f19565b811461213c57600080fd5b50565b61214881611f45565b811461215357600080fd5b5056fea2646970667358221220aa05f5a6839194de0844aea3c6c952e87d0690f4c8e6e29b9edb5ea174d05eba64736f6c63430008040033";

export class BadgeXP__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _badgeRegistry: string,
    _recoveryOracle: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BadgeXP> {
    return super.deploy(
      _badgeRegistry,
      _recoveryOracle,
      overrides || {}
    ) as Promise<BadgeXP>;
  }
  getDeployTransaction(
    _badgeRegistry: string,
    _recoveryOracle: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _badgeRegistry,
      _recoveryOracle,
      overrides || {}
    );
  }
  attach(address: string): BadgeXP {
    return super.attach(address) as BadgeXP;
  }
  connect(signer: Signer): BadgeXP__factory {
    return super.connect(signer) as BadgeXP__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BadgeXPInterface {
    return new utils.Interface(_abi) as BadgeXPInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BadgeXP {
    return new Contract(address, _abi, signerOrProvider) as BadgeXP;
  }
}
