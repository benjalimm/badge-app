/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BadgeXP, BadgeXPInterface } from "../BadgeXP";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_badgeRegistry",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recoveryOracle",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "Failure",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "badgeRegistry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "registry",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "deployer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "badgeContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "getXPForBadgeContractToRecipient",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "level",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "registry",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "xp",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
    ],
    name: "recover",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "recoveryOracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "registry",
        type: "address",
      },
    ],
    name: "resetXP",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_xpOracle",
        type: "address",
      },
    ],
    name: "setXPOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalXP",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userToBadgeTokenLedger",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "xpOracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200246738038062002467833981810160405281019062000037919062000118565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620001a7565b60008151905062000112816200018d565b92915050565b600080604083850312156200012c57600080fd5b60006200013c8582860162000101565b92505060206200014f8582860162000101565b9150509250929050565b600062000166826200016d565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620001988162000159565b8114620001a457600080fd5b50565b6122b080620001b76000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806395d89b41116100c3578063dac948651161007c578063dac94865146103ca578063dd62ed3e146103e6578063e3d670d714610416578063ea3e7cef14610446578063ef265d6d14610464578063ef72c8cd146104805761014d565b806395d89b41146102f2578063a9059cbb14610310578063aa93bfa814610340578063cdd8ee7f1461035e578063d5f394881461037c578063da39b3e71461039a5761014d565b8063313ce56711610115578063313ce5671461020a5780633776b7011461022857806348acac641461024457806354fd4d501461027457806370a0823114610292578063886a31eb146102c25761014d565b806306fdde0314610152578063095ea7b3146101705780630cd865ec146101a057806318160ddd146101bc57806323b872dd146101da575b600080fd5b61015a61049e565b6040516101679190611e57565b60405180910390f35b61018a60048036038101906101859190611b52565b6104db565b6040516101979190611e3c565b60405180910390f35b6101ba60048036038101906101b59190611a75565b6104e3565b005b6101c46107dd565b6040516101d19190611f39565b60405180910390f35b6101f460048036038101906101ef9190611b03565b6107e7565b6040516102019190611e3c565b60405180910390f35b6102126107f0565b60405161021f9190611f54565b60405180910390f35b610242600480360381019061023d9190611c2f565b6107f9565b005b61025e60048036038101906102599190611ac7565b610db9565b60405161026b9190611f39565b60405180910390f35b61027c610e40565b6040516102899190611e57565b60405180910390f35b6102ac60048036038101906102a79190611a75565b610e79565b6040516102b99190611f39565b60405180910390f35b6102dc60048036038101906102d79190611ac7565b610ec2565b6040516102e99190611f39565b60405180910390f35b6102fa610ee7565b6040516103079190611e57565b60405180910390f35b61032a60048036038101906103259190611b52565b610f24565b6040516103379190611e3c565b60405180910390f35b610348610f2c565b6040516103559190611f39565b60405180910390f35b610366610f32565b6040516103739190611e21565b60405180910390f35b610384610f58565b6040516103919190611e21565b60405180910390f35b6103b460048036038101906103af9190611be0565b610f7c565b6040516103c19190611f39565b60405180910390f35b6103e460048036038101906103df9190611a75565b6113d0565b005b61040060048036038101906103fb9190611ac7565b6114a2565b60405161040d9190611f39565b60405180910390f35b610430600480360381019061042b9190611a75565b6114aa565b60405161043d9190611f39565b60405180910390f35b61044e6114c2565b60405161045b9190611e21565b60405180910390f35b61047e60048036038101906104799190611be0565b6114e8565b005b6104886119d8565b6040516104959190611e21565b60405180910390f35b60606040518060400160405280600f81526020017f426164676520585020706f696e74730000000000000000000000000000000000815250905090565b600092915050565b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663511865e960e01b846040516024016105389190611e21565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516105a29190611e0a565b6000604051808303816000865af19150503d80600081146105df576040519150601f19603f3d011682016040523d82523d6000602084013e6105e4565b606091505b509150915081610629576040517ffd5de27600000000000000000000000000000000000000000000000000000000815260040161062090611e79565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16610649826119fe565b73ffffffffffffffffffffffffffffffffffffffff16141561079d576000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161078f9190611f39565b60405180910390a3506107d8565b6040517f973d02cb0000000000000000000000000000000000000000000000000000000081526004016107cf90611e99565b60405180910390fd5b505050565b6000600154905090565b60009392505050565b60006002905090565b80600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a7856462826040518263ffffffff1660e01b81526004016108559190611e21565b60206040518083038186803b15801561086d57600080fd5b505afa158015610881573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a59190611b8e565b6108e4576040517f973d02cb0000000000000000000000000000000000000000000000000000000081526004016108db90611f19565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663c3c5a547336040518263ffffffff1660e01b815260040161091d9190611e21565b60206040518083038186803b15801561093557600080fd5b505afa158015610949573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096d9190611b8e565b6109ac576040517f973d02cb0000000000000000000000000000000000000000000000000000000081526004016109a390611ed9565b60405180910390fd5b848460003373ffffffffffffffffffffffffffffffffffffffff16635be0eefb6040518163ffffffff1660e01b815260040160206040518083038186803b1580156109f657600080fd5b505afa158015610a0a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2e9190611a9e565b90506000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080841115610af4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aeb90611ef9565b60405180910390fd5b88600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b439190611ff7565b9250508190555088600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b999190611fa1565b9250508190555060003373ffffffffffffffffffffffffffffffffffffffff16635be0eefb6040518163ffffffff1660e01b815260040160206040518083038186803b158015610be857600080fd5b505afa158015610bfc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c209190611a9e565b905089600360008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610cae9190611ff7565b9250508190555089600360008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d419190611fa1565b925050819055508773ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8c604051610da59190611f39565b60405180910390a350505050505050505050565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6040518060400160405280600381526020017f312e30000000000000000000000000000000000000000000000000000000000081525081565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6003602052816000526040600020602052806000526040600020600091509150505481565b60606040518060400160405280600381526020017f4258500000000000000000000000000000000000000000000000000000000000815250905090565b600092915050565b60015481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a7856462826040518263ffffffff1660e01b8152600401610fda9190611e21565b60206040518083038186803b158015610ff257600080fd5b505afa158015611006573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061102a9190611b8e565b611069576040517f973d02cb00000000000000000000000000000000000000000000000000000000815260040161106090611f19565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663c3c5a547336040518263ffffffff1660e01b81526004016110a29190611e21565b60206040518083038186803b1580156110ba57600080fd5b505afa1580156110ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110f29190611b8e565b611131576040517f973d02cb00000000000000000000000000000000000000000000000000000000815260040161112890611ed9565b60405180910390fd5b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f85d6f9866040518263ffffffff1660e01b815260040161118c9190611f39565b60206040518083038186803b1580156111a457600080fd5b505afa1580156111b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111dc9190611bb7565b915081600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461122d9190611fa1565b9250508190555081600160008282546112469190611fa1565b9250508190555060003373ffffffffffffffffffffffffffffffffffffffff16635be0eefb6040518163ffffffff1660e01b815260040160206040518083038186803b15801561129557600080fd5b505afa1580156112a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112cd9190611a9e565b905082600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461135b9190611fa1565b925050819055508473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040516113bf9190611f39565b60405180910390a350509392505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461145e576040517f973d02cb00000000000000000000000000000000000000000000000000000000815260040161145590611eb9565b60405180910390fd5b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600092915050565b60026020528060005260406000206000915090505481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b80600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a7856462826040518263ffffffff1660e01b81526004016115449190611e21565b60206040518083038186803b15801561155c57600080fd5b505afa158015611570573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115949190611b8e565b6115d3576040517f973d02cb0000000000000000000000000000000000000000000000000000000081526004016115ca90611f19565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663c3c5a547336040518263ffffffff1660e01b815260040161160c9190611e21565b60206040518083038186803b15801561162457600080fd5b505afa158015611638573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061165c9190611b8e565b61169b576040517f973d02cb00000000000000000000000000000000000000000000000000000000815260040161169290611ed9565b60405180910390fd5b838360003373ffffffffffffffffffffffffffffffffffffffff16635be0eefb6040518163ffffffff1660e01b815260040160206040518083038186803b1580156116e557600080fd5b505afa1580156116f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061171d9190611a9e565b90506000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050808411156117e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117da90611ef9565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff16635be0eefb6040518163ffffffff1660e01b815260040160206040518083038186803b15801561182b57600080fd5b505afa15801561183f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118639190611a9e565b905088600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546118b49190611ff7565b9250508190555088600360008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546119479190611ff7565b9250508190555088600160008282546119609190611ff7565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8b6040516119c59190611f39565b60405180910390a3505050505050505050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060208201519050919050565b600081359050611a1b81612235565b92915050565b600081519050611a3081612235565b92915050565b600081519050611a458161224c565b92915050565b600081359050611a5a81612263565b92915050565b600081519050611a6f81612263565b92915050565b600060208284031215611a8757600080fd5b6000611a9584828501611a0c565b91505092915050565b600060208284031215611ab057600080fd5b6000611abe84828501611a21565b91505092915050565b60008060408385031215611ada57600080fd5b6000611ae885828601611a0c565b9250506020611af985828601611a0c565b9150509250929050565b600080600060608486031215611b1857600080fd5b6000611b2686828701611a0c565b9350506020611b3786828701611a0c565b9250506040611b4886828701611a4b565b9150509250925092565b60008060408385031215611b6557600080fd5b6000611b7385828601611a0c565b9250506020611b8485828601611a4b565b9150509250929050565b600060208284031215611ba057600080fd5b6000611bae84828501611a36565b91505092915050565b600060208284031215611bc957600080fd5b6000611bd784828501611a60565b91505092915050565b600080600060608486031215611bf557600080fd5b6000611c0386828701611a4b565b9350506020611c1486828701611a0c565b9250506040611c2586828701611a0c565b9150509250925092565b60008060008060808587031215611c4557600080fd5b6000611c5387828801611a4b565b9450506020611c6487828801611a0c565b9350506040611c7587828801611a0c565b9250506060611c8687828801611a0c565b91505092959194509250565b611c9b8161202b565b82525050565b611caa8161203d565b82525050565b6000611cbb82611f6f565b611cc58185611f85565b9350611cd5818560208601612080565b80840191505092915050565b6000611cec82611f7a565b611cf68185611f90565b9350611d06818560208601612080565b611d0f816120e2565b840191505092915050565b6000611d27601e83611f90565b9150611d32826120f3565b602082019050919050565b6000611d4a602a83611f90565b9150611d558261211c565b604082019050919050565b6000611d6d601583611f90565b9150611d788261216b565b602082019050919050565b6000611d90602483611f90565b9150611d9b82612194565b604082019050919050565b6000611db3601183611f90565b9150611dbe826121e3565b602082019050919050565b6000611dd6601983611f90565b9150611de18261220c565b602082019050919050565b611df581612069565b82525050565b611e0481612073565b82525050565b6000611e168284611cb0565b915081905092915050565b6000602082019050611e366000830184611c92565b92915050565b6000602082019050611e516000830184611ca1565b92915050565b60006020820190508181036000830152611e718184611ce1565b905092915050565b60006020820190508181036000830152611e9281611d1a565b9050919050565b60006020820190508181036000830152611eb281611d3d565b9050919050565b60006020820190508181036000830152611ed281611d60565b9050919050565b60006020820190508181036000830152611ef281611d83565b9050919050565b60006020820190508181036000830152611f1281611da6565b9050919050565b60006020820190508181036000830152611f3281611dc9565b9050919050565b6000602082019050611f4e6000830184611dec565b92915050565b6000602082019050611f696000830184611dfb565b92915050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000611fac82612069565b9150611fb783612069565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611fec57611feb6120b3565b5b828201905092915050565b600061200282612069565b915061200d83612069565b9250828210156120205761201f6120b3565b5b828203905092915050565b600061203682612049565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b8381101561209e578082015181840152602081019050612083565b838111156120ad576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f8301169050919050565b7f43616c6c20746f207265636f76657279206f7261636c65206661696c65640000600082015250565b7f4f6e6c79207265636f7665727920616464726573732063616e207265636f766560008201527f7220426164676520585000000000000000000000000000000000000000000000602082015250565b7f4f6e6c79206465706c6f7965722063616e207365740000000000000000000000600082015250565b7f456e74697479206973206e6f74207265676973746572656420746f207265676960008201527f7374727900000000000000000000000000000000000000000000000000000000602082015250565b7f4e6f7420656e6f75676820746f6b656e73000000000000000000000000000000600082015250565b7f5265676973747279206973206e6f742063657274696669656400000000000000600082015250565b61223e8161202b565b811461224957600080fd5b50565b6122558161203d565b811461226057600080fd5b50565b61226c81612069565b811461227757600080fd5b5056fea2646970667358221220e63704819430f3080217c2874420c5899f44c16940a3e3a6b4888a7d00fae5aa64736f6c63430008040033";

export class BadgeXP__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _badgeRegistry: string,
    _recoveryOracle: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BadgeXP> {
    return super.deploy(
      _badgeRegistry,
      _recoveryOracle,
      overrides || {}
    ) as Promise<BadgeXP>;
  }
  getDeployTransaction(
    _badgeRegistry: string,
    _recoveryOracle: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _badgeRegistry,
      _recoveryOracle,
      overrides || {}
    );
  }
  attach(address: string): BadgeXP {
    return super.attach(address) as BadgeXP;
  }
  connect(signer: Signer): BadgeXP__factory {
    return super.connect(signer) as BadgeXP__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BadgeXPInterface {
    return new utils.Interface(_abi) as BadgeXPInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BadgeXP {
    return new Contract(address, _abi, signerOrProvider) as BadgeXP;
  }
}
