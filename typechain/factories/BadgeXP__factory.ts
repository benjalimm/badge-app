/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BadgeXP, BadgeXPInterface } from "../BadgeXP";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_badgeRegistry",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recoveryOracle",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "Failure",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "badgeRegistry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseXP",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "registry",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "level",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "registry",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
    ],
    name: "recover",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "recoveryOracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalXP",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526103e86004553480156200001757600080fd5b50604051620016cb380380620016cb83398181016040528101906200003d9190620000de565b81600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506200016d565b600081519050620000d88162000153565b92915050565b60008060408385031215620000f257600080fd5b60006200010285828601620000c7565b92505060206200011585828601620000c7565b9150509250929050565b60006200012c8262000133565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200015e816200011f565b81146200016a57600080fd5b50565b61154e806200017d6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806395d89b41116100a2578063da39b3e711610071578063da39b3e7146102be578063dd62ed3e146102da578063e3d670d71461030a578063ea3e7cef1461033a578063ef265d6d146103585761010b565b806395d89b4114610234578063a9059cbb14610252578063aa93bfa814610282578063cdd8ee7f146102a05761010b565b806323b872dd116100de57806323b872dd14610198578063313ce567146101c857806368130fd1146101e657806370a08231146102045761010b565b806306fdde0314610110578063095ea7b31461012e5780630cd865ec1461015e57806318160ddd1461017a575b600080fd5b610118610374565b60405161012591906110a3565b60405180910390f35b61014860048036038101906101439190610e70565b6103b1565b6040516101559190611088565b60405180910390f35b61017860048036038101906101739190610dbc565b6103b9565b005b6101826106b3565b60405161018f9190611145565b60405180910390f35b6101b260048036038101906101ad9190610e21565b6106bc565b6040516101bf9190611088565b60405180910390f35b6101d06106c5565b6040516101dd9190611160565b60405180910390f35b6101ee6106ce565b6040516101fb9190611145565b60405180910390f35b61021e60048036038101906102199190610dbc565b6106d4565b60405161022b9190611145565b60405180910390f35b61023c61071d565b60405161024991906110a3565b60405180910390f35b61026c60048036038101906102679190610e70565b61075a565b6040516102799190611088565b60405180910390f35b61028a610762565b6040516102979190611145565b60405180910390f35b6102a8610768565b6040516102b5919061106d565b60405180910390f35b6102d860048036038101906102d39190610ed5565b61078e565b005b6102f460048036038101906102ef9190610de5565b610a28565b6040516103019190611145565b60405180910390f35b610324600480360381019061031f9190610dbc565b610a30565b6040516103319190611145565b60405180910390f35b610342610a48565b60405161034f919061106d565b60405180910390f35b610372600480360381019061036d9190610ed5565b610a6e565b005b60606040518060400160405280600f81526020017f426164676520585020706f696e74730000000000000000000000000000000000815250905090565b600092915050565b600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663511865e960e01b8460405160240161040e919061106d565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516104789190611056565b6000604051808303816000865af19150503d80600081146104b5576040519150601f19603f3d011682016040523d82523d6000602084013e6104ba565b606091505b5091509150816104ff576040517ffd5de2760000000000000000000000000000000000000000000000000000000081526004016104f6906110c5565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff1661051f82610cfb565b73ffffffffffffffffffffffffffffffffffffffff161415610673576000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516106659190611145565b60405180910390a3506106ae565b6040517f973d02cb0000000000000000000000000000000000000000000000000000000081526004016106a5906110e5565b60405180910390fd5b505050565b60008054905090565b60009392505050565b60006002905090565b60045481565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606040518060400160405280600381526020017f4258500000000000000000000000000000000000000000000000000000000000815250905090565b600092915050565b60005481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b80600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a7856462826040518263ffffffff1660e01b81526004016107ea919061106d565b60206040518083038186803b15801561080257600080fd5b505afa158015610816573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083a9190610eac565b610879576040517f973d02cb00000000000000000000000000000000000000000000000000000000815260040161087090611125565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663c3c5a547336040518263ffffffff1660e01b81526004016108b2919061106d565b60206040518083038186803b1580156108ca57600080fd5b505afa1580156108de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109029190610eac565b610941576040517f973d02cb00000000000000000000000000000000000000000000000000000000815260040161093890611105565b60405180910390fd5b600061094c85610d09565b905080600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461099d91906111ad565b92505081905550806000808282546109b591906111ad565b925050819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a199190611145565b60405180910390a35050505050565b600092915050565b60016020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b80600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a7856462826040518263ffffffff1660e01b8152600401610aca919061106d565b60206040518083038186803b158015610ae257600080fd5b505afa158015610af6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1a9190610eac565b610b59576040517f973d02cb000000000000000000000000000000000000000000000000000000008152600401610b5090611125565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663c3c5a547336040518263ffffffff1660e01b8152600401610b92919061106d565b60206040518083038186803b158015610baa57600080fd5b505afa158015610bbe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be29190610eac565b610c21576040517f973d02cb000000000000000000000000000000000000000000000000000000008152600401610c1890611105565b60405180910390fd5b83600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c70919061128e565b9250508190555083600080828254610c88919061128e565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef86604051610ced9190611145565b60405180910390a350505050565b600060208201519050919050565b600080821115610d73576000808390505b6000811115610d69576064826019610d329190611234565b610d3c9190611203565b600454610d4991906111ad565b82610d5491906111ad565b91508080610d619061134a565b915050610d1a565b5080915050610d78565b600090505b919050565b600081359050610d8c816114d3565b92915050565b600081519050610da1816114ea565b92915050565b600081359050610db681611501565b92915050565b600060208284031215610dce57600080fd5b6000610ddc84828501610d7d565b91505092915050565b60008060408385031215610df857600080fd5b6000610e0685828601610d7d565b9250506020610e1785828601610d7d565b9150509250929050565b600080600060608486031215610e3657600080fd5b6000610e4486828701610d7d565b9350506020610e5586828701610d7d565b9250506040610e6686828701610da7565b9150509250925092565b60008060408385031215610e8357600080fd5b6000610e9185828601610d7d565b9250506020610ea285828601610da7565b9150509250929050565b600060208284031215610ebe57600080fd5b6000610ecc84828501610d92565b91505092915050565b600080600060608486031215610eea57600080fd5b6000610ef886828701610da7565b9350506020610f0986828701610d7d565b9250506040610f1a86828701610d7d565b9150509250925092565b610f2d816112c2565b82525050565b610f3c816112d4565b82525050565b6000610f4d8261117b565b610f578185611191565b9350610f67818560208601611317565b80840191505092915050565b6000610f7e82611186565b610f88818561119c565b9350610f98818560208601611317565b610fa1816113d2565b840191505092915050565b6000610fb9601e8361119c565b9150610fc4826113e3565b602082019050919050565b6000610fdc602a8361119c565b9150610fe78261140c565b604082019050919050565b6000610fff60248361119c565b915061100a8261145b565b604082019050919050565b600061102260198361119c565b915061102d826114aa565b602082019050919050565b61104181611300565b82525050565b6110508161130a565b82525050565b60006110628284610f42565b915081905092915050565b60006020820190506110826000830184610f24565b92915050565b600060208201905061109d6000830184610f33565b92915050565b600060208201905081810360008301526110bd8184610f73565b905092915050565b600060208201905081810360008301526110de81610fac565b9050919050565b600060208201905081810360008301526110fe81610fcf565b9050919050565b6000602082019050818103600083015261111e81610ff2565b9050919050565b6000602082019050818103600083015261113e81611015565b9050919050565b600060208201905061115a6000830184611038565b92915050565b60006020820190506111756000830184611047565b92915050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006111b882611300565b91506111c383611300565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156111f8576111f7611374565b5b828201905092915050565b600061120e82611300565b915061121983611300565b925082611229576112286113a3565b5b828204905092915050565b600061123f82611300565b915061124a83611300565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561128357611282611374565b5b828202905092915050565b600061129982611300565b91506112a483611300565b9250828210156112b7576112b6611374565b5b828203905092915050565b60006112cd826112e0565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b8381101561133557808201518184015260208101905061131a565b83811115611344576000848401525b50505050565b600061135582611300565b9150600082141561136957611368611374565b5b600182039050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b7f43616c6c20746f207265636f76657279206f7261636c65206661696c65640000600082015250565b7f4f6e6c79207265636f7665727920616464726573732063616e207265636f766560008201527f7220426164676520585000000000000000000000000000000000000000000000602082015250565b7f456e74697479206973206e6f74207265676973746572656420746f207265676960008201527f7374727900000000000000000000000000000000000000000000000000000000602082015250565b7f5265676973747279206973206e6f742063657274696669656400000000000000600082015250565b6114dc816112c2565b81146114e757600080fd5b50565b6114f3816112d4565b81146114fe57600080fd5b50565b61150a81611300565b811461151557600080fd5b5056fea2646970667358221220c478c460d70bd26dd1146fd64aa63c5537eb70daaa0268f5a66f21537c9018e164736f6c63430008040033";

export class BadgeXP__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _badgeRegistry: string,
    _recoveryOracle: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BadgeXP> {
    return super.deploy(
      _badgeRegistry,
      _recoveryOracle,
      overrides || {}
    ) as Promise<BadgeXP>;
  }
  getDeployTransaction(
    _badgeRegistry: string,
    _recoveryOracle: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _badgeRegistry,
      _recoveryOracle,
      overrides || {}
    );
  }
  attach(address: string): BadgeXP {
    return super.attach(address) as BadgeXP;
  }
  connect(signer: Signer): BadgeXP__factory {
    return super.connect(signer) as BadgeXP__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BadgeXPInterface {
    return new utils.Interface(_abi) as BadgeXPInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BadgeXP {
    return new Contract(address, _abi, signerOrProvider) as BadgeXP;
  }
}
